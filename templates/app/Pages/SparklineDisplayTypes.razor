@* this namespace is required for Infragistics controls *@
@using Infragistics.Blazor.Controls

@* NOTE use this HTML code to design a sample *@
<div class="igContainer">
    @* <div class="igOptions-horizontal">
        <label>Select DisplayType: </label>
        <select @bind="SelectedDisplayType">
            @foreach (var chartType in Enum.GetValues(typeof(SparklineDisplayType)))
            {
                <option>@chartType</option>
            }
        </select>
    </div> *@

    <div class="igComponent">

        @* NOTE making sure data is loaded before we can render it *@
        @if (DataSource != null)
        {
            <section>Sparkline with Line DisplayType</section>
            <Sparkline
            Height="calc(100% - 1rem)"
            Width="100%"
            DataSource="DataSource"
            DisplayType="SparklineDisplayType.Line"
            ValueMemberPath="Value"
            LabelMemberPath="Angle">
            </Sparkline>

            <section>Sparkline with Area DisplayType</section>
            <Sparkline
            Height="calc(100% - 1rem)"
            Width="100%"
            DataSource="DataSource"
            DisplayType="SparklineDisplayType.Area"
            ValueMemberPath="Value"
            LabelMemberPath="Angle">
            </Sparkline>

            <section>Sparkline with Column DisplayType</section>
            <Sparkline
            Height="calc(100% - 1rem)"
            Width="100%"
            DataSource="DataSource"
            DisplayType="SparklineDisplayType.Column"
            ValueMemberPath="Value"
            LabelMemberPath="Angle">
            </Sparkline>

            <section>Sparkline with WinLoss DisplayType</section>
            <Sparkline
            Height="calc(100% - 1rem)"
            Width="100%"
            DataSource="DataSource"
            DisplayType="SparklineDisplayType.WinLoss"
            ValueMemberPath="Value"
            LabelMemberPath="Angle">
            </Sparkline>
        }

    </div>
</div>

@* NOTE you can change this C# code to affect behaviour of this page: *@
@code {

    // NOTE here, you can add properties to store values and data for this component
    private List<DataItem> DataSource;
    private SparklineDisplayType SelectedDisplayType = SparklineDisplayType.Line;

    // NOTE here, you can Initialize properties/state/data of the sample
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Sample OnInitializedAsync...");

        var dataItems = new List<DataItem>();

        var index = 0;
        var min =  1000.0;
        var max = -1000.0;

        for (var angle = 0; angle <= 360 * 4.0; angle += 5)
        {
            var v1 = Math.Sin(angle * Math.PI / 180);
            var v2 = Math.Sin(3 * angle * Math.PI / 180) / 3;

            dataItems.Add(new DataItem() {
                Index = index++,
                Angle = angle,
                Value = v1 + v2
            });
            min = Math.Min(min, v1 + v2);
            max = Math.Max(max, v1 + v2);
        }

        DataSource = dataItems;
        await Task.Delay(10);
    }

    public class DataItem {
        public double Index { get; set; }
        public double Value { get; set; }
        public double Angle { get; set; }
    }

}
