
@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor;
@inject IJSRuntime JSRuntime;


<div class="igContainer">

    <div class="igComponent">

        @* NOTE making sure data is loaded before we can render it *@
        @if (DataSource != null)
        {
            <CategoryChart Height="100%" Width="100%"
                           DataSource="DataSource">
            </CategoryChart>
        }

    </div>
</div>

@* NOTE you can change this C# code to affect behaviour of this page: *@
@code {

    // NOTE here, you can add properties to store values and data for this component
    private List<OlympicMedals> DataSource;


    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Console.WriteLine("Sample runtime: " + IgniteUIBlazor.JsRuntime);
        Console.WriteLine("Sample OnInitialized...");
        CategoryChartModule.Register(IgniteUIBlazor);

        Console.WriteLine("Sample OnInitializedAsync...");

        var olympicMedals = new List<OlympicMedals>();
        olympicMedals.Add(new OlympicMedals() { Year = "1996", USA = 148, CHN = 110, RUS = 95 });
        olympicMedals.Add(new OlympicMedals() { Year = "2000", USA = 142, CHN = 115, RUS = 91 });
        olympicMedals.Add(new OlympicMedals() { Year = "2004", USA = 134, CHN = 121, RUS = 86 });
        olympicMedals.Add(new OlympicMedals() { Year = "2008", USA = 131, CHN = 129, RUS = 65 });
        olympicMedals.Add(new OlympicMedals() { Year = "2012", USA = 135, CHN = 115, RUS = 77 });
        olympicMedals.Add(new OlympicMedals() { Year = "2016", USA = 146, CHN = 112, RUS = 88 });

        DataSource = olympicMedals;
    }

    public class OlympicMedals
    {
        public int USA { get; set; }
        public int CHN { get; set; }
        public int RUS { get; set; }
        public string Year { get; set; }
    }

}
