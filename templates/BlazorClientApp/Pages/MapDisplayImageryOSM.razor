
@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor;
@inject IJSRuntime JSRuntime;


<div class="container vertical">

        <GeographicMap Height="100%" Width="100%" Zoomable="true">
        </GeographicMap>

        @*<GeographicMap Height="600px" Width="600px">
        </GeographicMap>*@

</div>


@code {

    // NOTE here, you can add properties to store values and data for this component
    private List<GeLocation> DataSource;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Console.WriteLine("Sample runtime: " + IgniteUIBlazor.JsRuntime);
        Console.WriteLine("Sample OnInitialized...");
        GeographicMapModule.Register(IgniteUIBlazor);

        DataSource = new List<GeLocation>();
    }

    public class GeLocation
    {
        public double Lat { get; set; }
        public double Lon { get; set; }

    }

    // NOTE here is example of even handler that update a field that is bound in HTML code above
    protected void OnSliceClick()
    {
        Console.WriteLine("Sample OnButtonClick");

    }
}
