@page "/SparklineDisplayTypes"


@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor;
@inject IJSRuntime JSRuntime;


<div class="igContainer">
    @* <div class="igOptions-horizontal">
            <label>Select DisplayType: </label>
            <select @bind="SelectedDisplayType">
                @foreach (var chartType in Enum.GetValues(typeof(SparklineDisplayType)))
                {
                    <option>@chartType</option>
                }
            </select>
        </div> *@

    <div class="igComponent">


        @if (DataSource != null)
        {
            <section>Sparkline with Line DisplayType</section>
            <Sparkline Height="100%"
                       Width="100%"
                       DataSource="DataSource"
                       DisplayType="SparklineDisplayType.Line"
                       ValueMemberPath="Value"
                       LabelMemberPath="Angle">
            </Sparkline>

            <section>Sparkline with Area DisplayType</section>
            <Sparkline Height="100%"
                       Width="100%"
                       DataSource="DataSource"
                       DisplayType="SparklineDisplayType.Area"
                       ValueMemberPath="Value"
                       LabelMemberPath="Angle">
            </Sparkline>

            <section>Sparkline with Column DisplayType</section>
            <Sparkline Height="100%"
                       Width="100%"
                       DataSource="DataSource"
                       DisplayType="SparklineDisplayType.Column"
                       ValueMemberPath="Value"
                       LabelMemberPath="Angle">
            </Sparkline>

            <section>Sparkline with WinLoss DisplayType</section>
            <Sparkline Height="100%"
                       Width="100%"
                       DataSource="DataSource"
                       DisplayType="SparklineDisplayType.WinLoss"
                       ValueMemberPath="Value"
                       LabelMemberPath="Angle">
            </Sparkline>
        }

    </div>
</div>


@code {

    // NOTE here, you can add properties to store values and data for this component
    private List<DataItem> DataSource;
    // private SparklineDisplayType SelectedDisplayType = SparklineDisplayType.Line;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Console.WriteLine("Sample runtime: " + IgniteUIBlazor.JsRuntime);
        Console.WriteLine("Sample OnInitialized...");
        SparklineModule.Register(IgniteUIBlazor);

        var dataItems = new List<DataItem>();

        var index = 0;
        var min = 1000.0;
        var max = -1000.0;

        for (var angle = 0; angle <= 360 * 4.0; angle += 5)
        {
            var v1 = Math.Sin(angle * Math.PI / 180);
            var v2 = Math.Sin(3 * angle * Math.PI / 180) / 3;

            dataItems.Add(new DataItem()
            {
                Index = index++,
                Angle = angle,
                Value = v1 + v2
            });
            min = Math.Min(min, v1 + v2);
            max = Math.Max(max, v1 + v2);
        }

        DataSource = dataItems;
    }

    public class DataItem
    {
        public double Index { get; set; }
        public double Value { get; set; }
        public double Angle { get; set; }
    }

}
