@inherits LayoutComponentBase

@inject NavigationManager NavManager
@*@inject IJSRuntime JSRuntime;*@
@inject Samples.Shared.Services.SampleBrowser SB

<div class="sb-root">

    @* class="sidebar" *@
    <div class="sb-sidebar-menu" style="@SidebarStyle">
        <BrowserMenu />
    </div>

    <div class="sb-main">

        <div class="sb-toolbar" style="@ToolbarStyle">
            <span class="sb-toolbar-toggle" @onclick="ToggleSidebarMenu">
                <span class="oi oi-menu" aria-hidden="true"></span>
            </span>
            <span class="sb-toolbar-name">@SB.CurrentSample</span>
            @* <a href="https://infragistics.com/blazorsite/components/general-getting-started.html" target="_blank" class="ml-md-auto">Help Docs</a> *@

            @*fullscreen-enter*@
            <span class="sb-toolbar-toggle" @onclick="EnterFullScreen">
                <span class="oi oi-monitor" aria-hidden="true"></span>
            </span>

            <a target="_blank" href="@SB.CurrentHelpUrl">
                <span class="sb-toolbar-toggle">
                    <span class="oi oi-file" aria-hidden="true"></span>
                </span>
            </a>
        </div>

        <div class="sb-container">
            @Body
        </div>

    </div>

</div>

@code {
    protected static bool ToolbarCollapsed = false;
    protected string ToolbarStyle => ToolbarCollapsed || SB.IsEmbedded ? "display: none" : "display: flex";

    protected static bool SidebarCollapsed = false;
    protected string SidebarStyle => SidebarCollapsed || SB.IsEmbedded ? "display: none" : "display: flex";

    public static void ToggleSidebarMenu()
    {
        SidebarCollapsed = !SidebarCollapsed;
    }

    public void EnterFullScreen()
    {
        var url = NavManager.Uri;
        Console.WriteLine("EnterFullScreen1 " + url);
        if (url.Contains("samples/"))
        {
            url = url.Replace("samples/", "");
            Console.WriteLine("EnterFullScreen2 " + url);
            NavManager.NavigateTo(url);
        }
    }

    public BrowserLayout()
    {
        Console.WriteLine("SB.NAV Layout ");
    }

    protected override async Task OnInitializedAsync()
    {
        @* await SB.CheckUIAsync(NavManager.Uri);
            StateHasChanged(); *@
        await Task.Delay(1);
    }

    protected override void OnInitialized()
    {
        @* await Task.Delay(10);  *@

        NavManager.LocationChanged += this.OnLocationChanged;

        SB.SamplesLoaded += OnSamplesLoaded;
        @* await Task.Delay(1); *@
    }

    public void OnSamplesLoaded(object sender, EventArgs arg)
    {
        Console.WriteLine("SB.NAV Base " + NavManager.BaseUri);
        Console.WriteLine("SB.NAV Uri  " + NavManager.Uri);

        SB.CheckUI(NavManager.Uri);
        StateHasChanged();
    }
       
    public void OnLocationChanged(object sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs arg)
    {
        Console.WriteLine("SB.NAV Base " + NavManager.BaseUri);
        Console.WriteLine("SB.NAV Uri  " + NavManager.Uri);

        //await Task.Delay(10);
        //await SB.CheckUIAsync(arg.Location);
        SB.CheckUI(arg.Location);
        StateHasChanged();
    }

}
