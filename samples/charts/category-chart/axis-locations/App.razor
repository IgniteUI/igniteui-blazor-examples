@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">

    <div class="options vertical">
        <span class="legend-title">Renewable Electricity Generated</span>
        <div class="legend">
            <Legend @ref="Legend" Orientation="LegendOrientation.Horizontal" />
        </div>

        <div class="overlay-right">
            <div class="options horizontal">
                <label class="options-label">Y - Axis Location </label>
                <select @onchange="OnLabelsLocationChange">
                    <option>Outside Left</option>
                    <option>Outside Right</option>
                    <option>Inside Left</option>
                    <option>Inside Right</option>
                </select>
            </div>
        </div>
    </div>

    <div class="container vertical">
        @if (Data != null)
        {
            <CategoryChart Height="100%" Width="100%"
                           Legend="Legend"
                           DataSource="Data"
                           ChartType="CategoryChartType.Line"
                           IsHorizontalZoomEnabled="false"
                           IsVerticalZoomEnabled="false"
                           YAxisLabelLocation="LabelsLocation">
            </CategoryChart>
        }
    </div>
</div>

@code {

    private Legend _Legend;
    private Legend Legend
    {
        get { return _Legend; }
        set { _Legend = value; StateHasChanged(); }
    }

    private List<EnergyRenewableInfo> Data = new EnergyRenewableData();

    protected override void OnInitialized()
    {
        IgbCategoryChartModule.Register(IgniteUIBlazor);
        IgbLegendModule.Register(IgniteUIBlazor);
    }

    private YAxisLabelLocation LabelsLocation = YAxisLabelLocation.OutsideLeft;
    private void OnLabelsLocationChange(ChangeEventArgs args)
    {
        string value = args.Value.ToString();

        if (value.Contains("Inside"))
        {
            if (value.Contains("Left"))
                this.LabelsLocation = YAxisLabelLocation.InsideLeft;
            else
                this.LabelsLocation = YAxisLabelLocation.InsideRight;
        }
        else
        {
            if (value.Contains("Left"))
                this.LabelsLocation = YAxisLabelLocation.OutsideLeft;
            else
                this.LabelsLocation = YAxisLabelLocation.OutsideRight;
        }
    }
}