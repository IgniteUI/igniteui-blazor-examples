@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igOptions">
        <label class="igOptions-label">Data Points: </label>
        <label class="igOptions-value">@DataInfo</label>
        <input class="igOptions-slider" type="range" min="10000" max="1000000" step="1000"
               value="@DataPoints" @onchange="OnDataPointsChanged" />
        <button @onclick="OnDataGenerateClick">Generate Data</button>
    </div>
    <div class="igComponent">
        @if (DataSource != null)
        {
            <CategoryChart Height="100%" Width="100%"
                           ChartType="CategoryChartType.Line"
                           DataSource="DataSource"
                           IsTransitionInEnabled="true">
            </CategoryChart>
        }
    </div>
</div>

@code {

    private int DataPoints = 1000;
    private string DataInfo;
    private List<CategoryDataItem> DataSource;

    protected override void OnInitialized()
    {
        CategoryChartModule.Register(IgniteUIBlazor);

        this.DataInfo = CategoryDataSource.ToShortString(this.DataPoints);
        this.DataSource = CategoryDataSource.Generate(0, this.DataPoints, true);
    }

    private void OnDataPointsChanged(ChangeEventArgs args)
    {
        this.DataPoints = int.Parse(args.Value.ToString());
        this.DataInfo = CategoryDataSource.ToShortString(this.DataPoints);
    }

    private void OnDataGenerateClick()
    {
        this.GenerateData();
    }

    private void GenerateData()
    {
        this.DataSource = CategoryDataSource.Generate(0, this.DataPoints, true);
    }
}