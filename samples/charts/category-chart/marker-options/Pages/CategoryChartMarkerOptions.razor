@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igOptions">
        <span class="igOptions-label">Chart Type: </span>
        <select @bind="@ChartType">
            <option>@CategoryChartType.Auto</option>
            <option>@CategoryChartType.Area</option>
            <option>@CategoryChartType.Column</option>
            <option>@CategoryChartType.Point</option>
            <option>@CategoryChartType.Line</option>
            <option>@CategoryChartType.Spline</option>
            <option>@CategoryChartType.SplineArea</option>
            <option>@CategoryChartType.StepArea</option>
            <option>@CategoryChartType.StepLine</option>
            <option>@CategoryChartType.Waterfall</option>
        </select>
        <span class="igOptions-label"> Marker Type: </span>
        <select @bind="@ChartMarkerType">
            <option>@MarkerType.Automatic</option>
            <option>@MarkerType.Circle</option>
            <option>@MarkerType.Triangle</option>
            <option>@MarkerType.Pyramid</option>
            <option>@MarkerType.Square</option>
            <option>@MarkerType.Diamond</option>
            <option>@MarkerType.Pentagon</option>
            <option>@MarkerType.Hexagon</option>
            <option>@MarkerType.Tetragram</option>
            <option>@MarkerType.Pentagram</option>
            <option>@MarkerType.Hexagram</option>
            <option>@MarkerType.None</option>
        </select>
    </div>
    <div class="igComponent">
        @if (DataSource != null)
        {
            <CategoryChart Height="100%" Width="100%" @ref="CategoryChartRef"
                           DataSource="DataSource"
                           ChartTitle="Renewable Electricity Generated"
                           IsSeriesHighlightingEnabled="true"
                           ChartType="@ChartType"
                           IsTransitionInEnabled="true"
                           YAxisMinimumValue="0">
            </CategoryChart>
        }
    </div>
</div>

@code {

    private List<EnergyChartData> DataSource;
    private CategoryChart _categoryChart;
    private CategoryChart CategoryChartRef
    {
        get { return _categoryChart; }
        set
        {
            _categoryChart = value;
            if (this.CategoryChartRef != null)
            {
                this.CategoryChartRef.MarkerTypes.Clear();
                this.CategoryChartRef.MarkerTypes.Add(this.ChartMarkerType);
                StateHasChanged();
            }
        }
    }
    private CategoryChartType ChartType;
    private MarkerType _markerType;
    private MarkerType ChartMarkerType
    {
        get { return _markerType; }
        set
        {
            _markerType = value;
            if (this.CategoryChartRef != null)
            {
                this.CategoryChartRef.MarkerTypes.Clear();
                this.CategoryChartRef.MarkerTypes.Add(value);               
            }
        }
    }

    protected override void OnInitialized()
    {
        CategoryChartModule.Register(IgniteUIBlazor);

        InitData();
        this.ChartType = CategoryChartType.Auto;
        this.ChartMarkerType = MarkerType.Automatic;
    }

    private void InitData()
    {
        List<EnergyChartData> _data = new List<EnergyChartData>();
        _data.Add(new EnergyChartData() { Year = "2009", Europe = 31, China = 21, USA = 19 });
        _data.Add(new EnergyChartData() { Year = "2010", Europe = 43, China = 26, USA = 24 });
        _data.Add(new EnergyChartData() { Year = "2011", Europe = 66, China = 29, USA = 28 });
        _data.Add(new EnergyChartData() { Year = "2012", Europe = 69, China = 32, USA = 26 });
        _data.Add(new EnergyChartData() { Year = "2013", Europe = 58, China = 47, USA = 38 });
        _data.Add(new EnergyChartData() { Year = "2014", Europe = 40, China = 46, USA = 31 });
        _data.Add(new EnergyChartData() { Year = "2015", Europe = 78, China = 50, USA = 19 });
        _data.Add(new EnergyChartData() { Year = "2016", Europe = 13, China = 90, USA = 52 });
        _data.Add(new EnergyChartData() { Year = "2017", Europe = 78, China = 132, USA = 50 });
        _data.Add(new EnergyChartData() { Year = "2018", Europe = 40, China = 134, USA = 34 });
        _data.Add(new EnergyChartData() { Year = "2019", Europe = 80, China = 96, USA = 38 });

        this.DataSource = _data;
    }

    public class EnergyChartData
    {
        public string Year { get; set; }
        public int Europe { get; set; }
        public int China { get; set; }
        public int USA { get; set; }
    }
}