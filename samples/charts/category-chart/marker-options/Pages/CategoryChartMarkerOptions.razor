@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igOptions">
        <span class="igOptions-label">Chart Type: </span>
        <select @bind="@ChartType">
            <option>@CategoryChartType.Auto</option>
            <option>@CategoryChartType.Area</option>
            <option>@CategoryChartType.Column</option>
            <option>@CategoryChartType.Point</option>
            <option>@CategoryChartType.Line</option>
            <option>@CategoryChartType.Spline</option>
            <option>@CategoryChartType.SplineArea</option>
            <option>@CategoryChartType.StepArea</option>
            <option>@CategoryChartType.StepLine</option>
            <option>@CategoryChartType.Waterfall</option>
        </select>
        <span class="igOptions-label"> Marker Type: </span>
        <select @bind="@ChartMarkerType">
            <option>@MarkerType.Automatic</option>
            <option>@MarkerType.Circle</option>
            <option>@MarkerType.Triangle</option>
            <option>@MarkerType.Pyramid</option>
            <option>@MarkerType.Square</option>
            <option>@MarkerType.Diamond</option>
            <option>@MarkerType.Pentagon</option>
            <option>@MarkerType.Hexagon</option>
            <option>@MarkerType.Tetragram</option>
            <option>@MarkerType.Pentagram</option>
            <option>@MarkerType.Hexagram</option>
            <option>@MarkerType.None</option>
        </select>
    </div>
    <div class="igComponent">
        @if (DataSource != null)
        {
            <CategoryChart Height="100%" Width="100%" @ref="CategoryChartRef"
                           DataSource="DataSource"
                           ChartTitle="Renewable Electricity Generated"
                           IsSeriesHighlightingEnabled="true"
                           ChartType="@ChartType"
                           IsTransitionInEnabled="true"
                           YAxisMinimumValue="0">
            </CategoryChart>
        }
    </div>
</div>

@code {

    private List<EnergyRenewableInfo> DataSource;
    private CategoryChart _categoryChart;
    private CategoryChart CategoryChartRef
    {
        get { return _categoryChart; }
        set
        {
            _categoryChart = value;
            if (this.CategoryChartRef != null)
            {
                this.CategoryChartRef.MarkerTypes.Clear();
                this.CategoryChartRef.MarkerTypes.Add(this.ChartMarkerType);
                StateHasChanged();
            }
        }
    }
    private CategoryChartType ChartType;
    private MarkerType _markerType;
    private MarkerType ChartMarkerType
    {
        get { return _markerType; }
        set
        {
            _markerType = value;
            if (this.CategoryChartRef != null)
            {
                this.CategoryChartRef.MarkerTypes.Clear();
                this.CategoryChartRef.MarkerTypes.Add(value);
            }
        }
    }

    protected override void OnInitialized()
    {
        CategoryChartModule.Register(IgniteUIBlazor);

        this.DataSource = new EnergyRenewableData();
        this.ChartType = CategoryChartType.Auto;
        this.ChartMarkerType = MarkerType.Automatic;
    }
 
}
