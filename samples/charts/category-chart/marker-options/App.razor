@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igOptions">
        <span class="igOptions-label">Chart Type </span>
        <select @bind="@SelectedChart">
            <option>@CategoryChartType.Area</option>
            <option>@CategoryChartType.Column</option>
            <option>@CategoryChartType.Point</option>
            <option>@CategoryChartType.Line</option>
            <option>@CategoryChartType.Spline</option>
            <option>@CategoryChartType.SplineArea</option>
            <option>@CategoryChartType.StepArea</option>
            <option>@CategoryChartType.StepLine</option>
            <option>@CategoryChartType.Waterfall</option>
            <option>@CategoryChartType.Auto</option>
        </select>
        <span class="igOptions-label"> Marker Type </span>
        <select @bind="@SelectedMarker">
            <option>@MarkerType.Circle</option>
            <option>@MarkerType.Automatic</option>
            <option>@MarkerType.Triangle</option>
            <option>@MarkerType.Pyramid</option>
            <option>@MarkerType.Square</option>
            <option>@MarkerType.Diamond</option>
            <option>@MarkerType.Pentagon</option>
            <option>@MarkerType.Hexagon</option>
            <option>@MarkerType.Tetragram</option>
            <option>@MarkerType.Pentagram</option>
            <option>@MarkerType.Hexagram</option>
            <option>@MarkerType.None</option>
        </select>
    </div>
    <div class="igComponent">
        @if (Data != null)
        {
            // TODO add this code when supported: MarkerTypes="Circle"

            // NOTE the MarkerTypes property is set in code-behind
            <CategoryChart Height="100%" Width="100%" @ref="Chart"
                           DataSource="Data"
                           ChartTitle="Renewable Electricity Generated"
                           IsSeriesHighlightingEnabled="true"
                           ChartType="@SelectedChart"
                           MarkerBrushes="White"
                           MarkerOutlines="#ee5879, #c4c4c4, #9af2e4"
                                  Brushes="#ee5879, #c4c4c4, #9af2e4"
                                 Outlines="#ee5879, #c4c4c4, #9af2e4"
                           IsTransitionInEnabled="true"
                           YAxisMinimumValue="0">
            </CategoryChart>
        }
    </div>
</div>

@code {

    private List<EnergyRenewableInfo> Data = new EnergyRenewableData();

    private CategoryChart Chart;
    private CategoryChartType SelectedChart = CategoryChartType.Line;

    private MarkerType _SelectedMarker = MarkerType.Circle;
    private MarkerType SelectedMarker
    {
        get { return _SelectedMarker; }
        set
        {
            _SelectedMarker = value;
            SetChartMarker(value);
        }
    }

    protected override void OnInitialized()
    {
        CategoryChartModule.Register(IgniteUIBlazor);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
            SetChartMarker(MarkerType.Circle); // initalizing to Circle marker
    }

    protected void SetChartMarker(MarkerType marker)
    {
        if (this.Chart != null)
        {
            this.Chart.MarkerTypes.Clear();
            this.Chart.MarkerTypes.Add(marker);
        }
    }

}