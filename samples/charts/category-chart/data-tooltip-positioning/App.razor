@using IgniteUI.Blazor.Controls

@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">
	<div class="options vertical">
        <IgbPropertyEditorPanel
        
        DescriptionType="CategoryChart"
        IsHorizontal="true"
        IsWrappingEnabled="true"
        Name="PropertyEditor"
        @ref="propertyEditor">
            <IgbPropertyEditorPropertyDescription
            PropertyPath="dataToolTipGroupedPositionModeX"
            Label="Grouped X Position:"
            Name="GroupedPositionXEditor"
            @ref="groupedPositionXEditor">
            </IgbPropertyEditorPropertyDescription>
            <IgbPropertyEditorPropertyDescription
            PropertyPath="dataToolTipGroupedPositionModeY"
            Label="Grouped Y Position:"
            Name="GroupedPositionYEditor"
            @ref="groupedPositionYEditor">
            </IgbPropertyEditorPropertyDescription>
            <IgbPropertyEditorPropertyDescription
            PropertyPath="dataToolTipGroupingMode"
            Label="Grouping Mode:"
            Name="GroupingModeEditor"
            @ref="groupingModeEditor">
            </IgbPropertyEditorPropertyDescription>
        </IgbPropertyEditorPanel>
    </div>
	<div class="legend-title">
        Highest Grossing Movie Franchises
    </div>
	
    <div class="container vertical fill">
        <IgbCategoryChart
        ChartType="CategoryChartType.Column"
        XAxisInterval="1"
        YAxisLabelLeftMargin="0"
        YAxisTitleLeftMargin="10"
        YAxisTitleRightMargin="5"
        YAxisTitle="Billions of U.S. Dollars"
        DataToolTipGroupedPositionModeX="DataTooltipGroupedPositionX.PinRight"
        DataToolTipGroupedPositionModeY="DataTooltipGroupedPositionY.PinTop"
        DataSource="HighestGrossingMovies"
        ToolTipType="ToolTipType.Data"
        CrosshairsDisplayMode="CrosshairsDisplayMode.None"
        Name="chart"
        @ref="chart">
        </IgbCategoryChart>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
    }

	private Action BindElements { get; set; }

	protected override void OnAfterRender(bool firstRender)
	{
		var propertyEditor = this.propertyEditor;
		var groupedPositionXEditor = this.groupedPositionXEditor;
		var groupedPositionYEditor = this.groupedPositionYEditor;
		var groupingModeEditor = this.groupingModeEditor;
		var chart = this.chart;

        this.BindElements = () => {
            propertyEditor.Target = this.chart;
        };
        this.BindElements();
	}

	private IgbPropertyEditorPanel propertyEditor;
	private IgbPropertyEditorPropertyDescription groupedPositionXEditor;
	private IgbPropertyEditorPropertyDescription groupedPositionYEditor;
	private IgbPropertyEditorPropertyDescription groupingModeEditor;
	private IgbCategoryChart chart;


    private HighestGrossingMovies _highestGrossingMovies = null;
    public HighestGrossingMovies HighestGrossingMovies
    {
        get
        {
            if (_highestGrossingMovies == null)
            {
                _highestGrossingMovies = new HighestGrossingMovies(); 
            }
            return _highestGrossingMovies;
        }
    }
    
}