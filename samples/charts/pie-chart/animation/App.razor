
@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">
    <div class="options horizontal">
        <button @onclick="onAnimationToggle">Animate Chart</button>
    </div>
    <div class="container vertical">
        @if (Data != null)
        {
            <IgbPieChart Height="100%" Width="100%"
                DataSource="Data"
                LabelMemberPath="Summary"
                LegendLabelMemberPath="Category"
                ValueMemberPath="MarketShare"
                LabelsPosition="LabelsPosition.InsideEnd"
                StartAngle="StartAngle"
                LabelExtent="LabelExtent"
                RadiusFactor="RadiusFactor">
            </IgbPieChart>
        }
    </div>
</div>

@code {

    private List<DataItem> Data;
    public double StartAngle = 0;
    public double RadiusFactor = 0.1;
    public double LabelExtent = 0.7;
    public Boolean isAnimating = false;

    public void onAnimationToggle()
    {
        if (!this.isAnimating)
        {
            this.StartAngle = 0;
            this.RadiusFactor = 0.1;
            this.isAnimating = true;

            Task.Delay(16).ContinueWith((t) => OnTimerTick());
        }
        else
        {
            this.isAnimating = false;
        }
    }

    private void OnTimerTick()
    {
        if (this.isAnimating)
        {
            if (this.RadiusFactor < 1.0)
                this.RadiusFactor += 0.0025;

            if (this.StartAngle < 360)
                this.StartAngle++;

            if (this.RadiusFactor >= 1.0 &&
                this.StartAngle >= 360)
            {
                this.isAnimating = false;
            }

            Task.Delay(16).ContinueWith((t) => OnTimerTick());
            this.StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        IgbPieChartModule.Register(IgniteUIBlazor);

        this.Data = new List<DataItem>();
        this.Data.Add(new DataItem { MarketShare = 37, Category = "Cooling", });
        this.Data.Add(new DataItem { MarketShare = 25, Category = "Residential", });
        this.Data.Add(new DataItem { MarketShare = 12, Category = "Heating", });
        this.Data.Add(new DataItem { MarketShare = 11, Category = "Lighting", });
        this.Data.Add(new DataItem { MarketShare = 15, Category = "Other", });

        this.onAnimationToggle();
    }

    public class DataItem
    {
        public string Category { get; set; }
        public double MarketShare { get; set; }
        public string Summary { get { return Category + " " + MarketShare + "%"; } }
    }
}
