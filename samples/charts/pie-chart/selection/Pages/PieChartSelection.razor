@page "/PieChartSelection"

@* this namespace is required for Infragistics controls *@
@using Infragistics.Blazor.Controls
@inject IInfragisticsBlazor InfragisticsBlazor;
@inject IJSRuntime JSRuntime;

<div class="igContainer">
   
	<div class="igOptions-horizontal">
		<label>
			Selected Slices: @SelectedItems
		</label>
	</div>

	<div class="igComponent">

		@if (DataSource != null)
		{
			<PieChart Height="calc(100% - 2rem)" Width="calc(100% - 2rem)"
					  @ref="pieChart"
					  DataSource="DataSource"
					  LabelMemberPath="Summary"
					  ValueMemberPath="MarketShare"
					  LegendLabelMemberPath="Company"
					  Outlines="white"
					  SelectionMode="SliceSelectionMode.Multiple"
					  SelectedSliceStroke="white"
					  SelectedSliceFill="rgb(143,143,143)"
					  SelectedSliceOpacity="1.0"
					  SelectedSliceStrokeThickness="2"
					  RadiusFactor="0.9"
					  StartAngle="0"                         
					  SliceClick="OnSliceClick">
			</PieChart>
		}

	</div>
</div>

@code {

    public PieChart pieChart;
    private List<DataItem> DataSource;
    public string SelectedItems { get; set; } = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        PieChartModule.Register(InfragisticsBlazor);
		
		var dataItems = new List<DataItem>();
        dataItems.Add(new DataItem() { MarketShare = 30, Company = "Google", });
        dataItems.Add(new DataItem() { MarketShare = 25, Company = "Apple", });
        dataItems.Add(new DataItem() { MarketShare = 20, Company = "Microsoft", });
        dataItems.Add(new DataItem() { MarketShare = 15, Company = "Samsung", });
        dataItems.Add(new DataItem() { MarketShare = 10, Company = "Other", });

        DataSource = dataItems;
    }

    public class DataItem
    {
        public string Company { get; set; }
        public double MarketShare { get; set; }

        public string Summary { get { return Company + " " + MarketShare + "%"; } }
    }

    protected void OnSliceClick(SliceClickEventArgs e)
    {
        string selectedSlices = "";
        //var selectedItems = this.pieChart.SelectedItems;

        //foreach (var item in selectedItems) {
        //    selectedSlices += ((DataItem)item).Company + " ";
        //}

        SelectedItems = selectedSlices;
    }
}
