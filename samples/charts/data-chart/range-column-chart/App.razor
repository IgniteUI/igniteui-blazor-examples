@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igOptions">
        <span class="igLegend-title">Monthly Temperature Range in LA and NYC for 2020 (in Celsius)</span>
        <div class="igLegend">
            <Legend @ref="LegendRef" Orientation="LegendOrientation.Horizontal" />
        </div>
    </div>
    <div class="igComponent">
        <DataChart Height="100%" Width="100%"
                   Legend="LegendRef"
                   IsHorizontalZoomEnabled="false"
                   IsVerticalZoomEnabled="false">

            <CategoryXAxis Name="xAxis" Label="Month" Interval="1" DataSource="@DataSource" />
            <NumericYAxis Name="yAxis" Title="Temperature (in Celsius)" TitleLeftMargin="10" />

            <RangeColumnSeries XAxisName="xAxis" Title="Los Angeles"
                               YAxisName="yAxis"
                               DataSource="@DataSource"
                               LowMemberPath="LA_Low"
                               HighMemberPath="LA_High" />            

            <RangeColumnSeries XAxisName="xAxis" Title="New York City"
                               YAxisName="yAxis"
                               DataSource="@DataSource"
                               LowMemberPath="NY_Low"
                               HighMemberPath="NY_High" />
        </DataChart>

    </div>
</div>

@code {

    private Legend _Legend;
    private Legend LegendRef
    {
        get { return _Legend; }
        set { _Legend = value; StateHasChanged(); }
    }

    private List<CityTemperatureInfo> DataSource = new CityTemperatureData();

    protected override void OnInitialized()
    {
        DataChartCoreModule.Register(IgniteUIBlazor);
        DataChartCategoryModule.Register(IgniteUIBlazor);
        DataChartCategoryCoreModule.Register(IgniteUIBlazor);
        DataChartInteractivityModule.Register(IgniteUIBlazor);
        LegendModule.Register(IgniteUIBlazor);
    }

}