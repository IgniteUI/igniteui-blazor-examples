@using IgniteUI.Blazor.Controls;

@inject IIgniteUIBlazor IgniteUIBlazor
@inject IJSRuntime JS

<div class="container vertical">

    <div class="container vertical fill">
        <IgbDataChart
        IsHorizontalZoomEnabled="true"
        IsVerticalZoomEnabled="true"
        ShouldAutoExpandMarginForInitialLabels="true"
        ComputedPlotAreaMarginMode="ComputedPlotAreaMarginMode.Series"
        Name="chart"
        @ref="chart">
            <IgbCategoryXAxis
            Interval="1"
            DataSource="Stock2Years"
            LabelLocation="AxisLabelsLocation.OutsideBottom"
            LabelExtent="30"
            Label="Month"
            Name="xAxis"
            @ref="xAxis">
            </IgbCategoryXAxis>
            
            <IgbNumericYAxis
            LabelLocation="AxisLabelsLocation.OutsideRight"
            Name="yAxis"
            @ref="yAxis">
            </IgbNumericYAxis>
            
            <IgbFinancialPriceSeries
            DisplayType="PriceDisplayType.Candlestick"
            XAxisName="xAxis"
            YAxisName="yAxis"
            OpenMemberPath="Open"
            HighMemberPath="High"
            LowMemberPath="Low"
            CloseMemberPath="Close"
            VolumeMemberPath="Volume"
            DataSource="Stock2Years"
            ShowDefaultTooltip="true"
            Title="Stock Price"
            Name="Series1"
            @ref="series1">
            </IgbFinancialPriceSeries>
            
            <IgbDataToolTipLayer
            Name="Tooltip"
            @ref="tooltip">
            </IgbDataToolTipLayer>
            
        </IgbDataChart>
        
    </div>

</div>

@code {
    protected override async Task OnInitializedAsync()
    {

    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var chart = this.chart;
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        var series1 = this.series1;
        var tooltip = this.tooltip;



	}

    private IgbDataChart chart;
    private IgbCategoryXAxis xAxis;
    private IgbNumericYAxis yAxis;
    private IgbFinancialPriceSeries series1;
    private IgbDataToolTipLayer tooltip;

    private Stock2Years _stock2Years = null;
    public Stock2Years Stock2Years
    {
        get
        {
            if (_stock2Years == null)
            {
                _stock2Years = new Stock2Years(); 
            }
            return _stock2Years;
        }
    }
    
}