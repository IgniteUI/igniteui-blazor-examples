@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igComponent">

        @if (DataSource != null)
        {
            <DataChart Height="100%" Width="100%"
                       GridMode="@GridMode.BeforeSeries"
                       Subtitle="Distribution of Magnetic Field"
                       SubtitleTopMargin="10"
                       IsHorizontalZoomEnabled="true"
                       IsVerticalZoomEnabled="true">

                <NumericXAxis Name="xAxis" TitleBottomMargin="10" Title="Longitude" MinimumValue="-180" MaximumValue="180" />
                <NumericYAxis Name="yAxis" TitleLeftMargin="10" Title="Latitude"  MinimumValue="-90" MaximumValue="90"/>

                <ScatterContourSeries XAxisName="xAxis"
                                      YAxisName="yAxis"
                                      DataSource="@DataSource"
                                      XMemberPath="X"
                                      YMemberPath="Y"
                                      Thickness="2"
                                      ValueMemberPath="Z"
                                      FillScale="@BrushScale"
                                      ShowDefaultTooltip="true">
                </ScatterContourSeries>

            </DataChart>
        }
    </div>
</div>

@code {

    private List<SampleScatterPoint> DataSource;
    private ValueBrushScale BrushScale;

    protected override void OnInitialized()
    {
        LegendModule.Register(IgniteUIBlazor);
        DataChartCoreModule.Register(IgniteUIBlazor);
        DataChartScatterModule.Register(IgniteUIBlazor);
        DataChartScatterCoreModule.Register(IgniteUIBlazor);
        DataChartInteractivityModule.Register(IgniteUIBlazor);
        ScatterContourSeriesModule.Register(IgniteUIBlazor);

        this.BrushScale = new ValueBrushScale();
        this.BrushScale.MinimumValue = - 2;
        this.BrushScale.MaximumValue = 2;
        this.BrushScale.Brushes = "#8670CB, #4AC4FF, #B5CC2E, #FC8612, #ED4840";

        DataSource = SampleScatterData.Create();

    }
}