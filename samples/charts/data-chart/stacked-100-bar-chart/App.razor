@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor;
@inject IJSRuntime JSRuntime;

<div class="container vertical">
    <div class="options vertical">
        <span class="legend-title">Renewable energy consumption</span>
        <div class="legend">
            <IgbLegend @ref="Legend" Orientation="LegendOrientation.Horizontal" />
        </div>
    </div>
    <div class="container vertical">
        @if (Data != null)
        {
            <IgbDataChart Height="100%" Width="100%" IsVerticalZoomEnabled="false" IsHorizontalZoomEnabled="false">
                <IgbCategoryYAxis Name="yAxis" DataSource="Data" Label="Location" IsInverted="true" />
                <IgbNumericXAxis Name="xAxis" MinimumValue="0" Title="TWh" />

                <IgbStacked100BarSeries XAxisName="xAxis" YAxisName="yAxis" DataSource="Data" ShowDefaultTooltip="true" AreaFillOpacity="1">
                    <IgbStackedFragmentSeries ValueMemberPath="Hydro" />
                    <IgbStackedFragmentSeries ValueMemberPath="Wind" />
                    <IgbStackedFragmentSeries ValueMemberPath="Solar" />
                    <IgbStackedFragmentSeries ValueMemberPath="Other" />
                </IgbStacked100BarSeries>
            </IgbDataChart>
        }
    </div>
</div>

@code {

    private IgbLegend _legend;
    public IgbLegend Legend
    {
        get { return _legend; }
        set
        {
            _legend = value;
            StateHasChanged();
        }
    }

    private List<EnergySource> Data = new EnergyData();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        IgbDataChartCoreModule.Register(IgniteUIBlazor);
        IgbDataChartCategoryCoreModule.Register(IgniteUIBlazor);
        IgbDataChartCategoryModule.Register(IgniteUIBlazor);
        IgbDataChartInteractivityModule.Register(IgniteUIBlazor);
        IgbDataChartStackedModule.Register(IgniteUIBlazor);
        IgbColumnFragmentModule.Register(IgniteUIBlazor);
        IgbStackedSplineSeriesModule.Register(IgniteUIBlazor);
        IgbStackedFragmentSeriesModule.Register(IgniteUIBlazor);
        IgbLegendModule.Register(IgniteUIBlazor);
    }
}
