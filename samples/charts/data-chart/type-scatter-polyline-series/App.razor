@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igComponent">

        @if (AirplaneShape != null && AirplaneSeats != null)
        {
            <DataChart Height="100%" Width="100%"
                       Subtitle="Airplane Seating Chart (Polylines)"
                       SubtitleTopMargin="10"
                       SeriesMouseEnterScript="onPolylineSeriesMouseEnter"
                       IsHorizontalZoomEnabled="true"
                       IsVerticalZoomEnabled="true">

                <NumericXAxis Name="xAxis" MinimumValue="-800" MaximumValue="800" Interval="200"></NumericXAxis>
                <NumericYAxis Name="yAxis" MinimumValue="-600" MaximumValue="600" Interval="200"></NumericYAxis>

                <ScatterPolylineSeries XAxisName="xAxis"
                                      YAxisName="yAxis"
                                      DataSource="AirplaneShape"
                                      ShapeMemberPath="Points"
                                      ShowDefaultTooltip="false"
                                      Thickness="0.5"
                                      Brush="LightGray" Outline="Black">
                </ScatterPolylineSeries>

                <ScatterPolylineSeries XAxisName="xAxis"
                                      YAxisName="yAxis"
                                      DataSource="AirplaneSeats"
                                      Title="AirplaneSeats"
                                      ShapeMemberPath="Points"
                                      StyleShapeScript="onPolylineShapeStyle">
                </ScatterPolylineSeries>

            </DataChart>
        }

    </div>
</div>

@code {

    private AirplaneSeatInfo[] AirplaneShape;
    private AirplaneSeatInfo[] AirplaneSeats;

    protected override async Task OnInitializedAsync()
    {
        DataChartCoreModule.Register(IgniteUIBlazor);
        DataChartScatterModule.Register(IgniteUIBlazor);
        DataChartScatterCoreModule.Register(IgniteUIBlazor);
        DataChartInteractivityModule.Register(IgniteUIBlazor);
        ScatterPolylineSeriesModule.Register(IgniteUIBlazor);

        var http = new HttpClient();
        var shape = "https://static.infragistics.com/xplatform/json/airplane-shape.json";
        this.AirplaneShape = await http.GetFromJsonAsync<AirplaneSeatInfo[]>(shape);

        var seats = "https://static.infragistics.com/xplatform/json/airplane-seats.json";
        this.AirplaneSeats = await http.GetFromJsonAsync<AirplaneSeatInfo[]>(seats);

        Console.WriteLine("OnInitializedAsync DataChartTypeScatterPolylineSeries");

        await Task.Delay(1);
    }

    public class AirplaneSeatInfo
    {
        public string Seat { get; set; }
        public string Class { get; set; }
        public string Price { get; set; }
        public string Status { get; set; }

        public List<List<Point>> Points { get; set; }
    }
}