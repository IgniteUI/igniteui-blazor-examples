@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor;
@inject IJSRuntime JSRuntime;

<div class="container vertical">
    <div class="options vertical">
        <span class="legend-title">Annual Number of Births by World Region, Relative</span>
    </div>
    <div class="container vertical">
        @if (Data != null)
        {
            <DataChart Height="100%" Width="100%" IsHorizontalZoomEnabled="false"
                IsVerticalZoomEnabled="false">
                <CategoryXAxis Name="xAxis" DataSource="Data" Label="Year" />
                <NumericYAxis Name="yAxis" Interval="20" TitleLeftMargin="10" LabelFormat="{0} %"/>

                <Stacked100LineSeries MarkerType="MarkerType.Circle" XAxisName="xAxis" YAxisName="yAxis" DataSource="Data" ShowDefaultTooltip="false">
                    <StackedFragmentSeries ValueMemberPath="Asia" />
                    <StackedFragmentSeries ValueMemberPath="Africa" />
                    <StackedFragmentSeries ValueMemberPath="Europe" />
                    <StackedFragmentSeries ValueMemberPath="NorthAmerica" />
                    <StackedFragmentSeries ValueMemberPath="SouthAmerica" />
                    <StackedFragmentSeries ValueMemberPath="Oceania" />
                </Stacked100LineSeries>
            </DataChart>
        }
    </div>
</div>

@code {

    public List<AnnualBirthRateRegionalInfo> Data = new AnnualBirthRateRegionalData();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        DataChartCoreModule.Register(IgniteUIBlazor);
        DataChartCategoryCoreModule.Register(IgniteUIBlazor);
        DataChartCategoryModule.Register(IgniteUIBlazor);
        DataChartInteractivityModule.Register(IgniteUIBlazor);
        DataChartStackedModule.Register(IgniteUIBlazor);
        StackedFragmentSeriesModule.Register(IgniteUIBlazor);
    }
}
