@using IgniteUI.Blazor.Controls;


<div class="container vertical">
    <div class="legend-title">
        Wind Speed vs Boat Speed
    </div>

    <div class="container vertical fill">
        <IgbDataChart
        IsHorizontalZoomEnabled="false"
        IsVerticalZoomEnabled="false"
        Name="chart"
        @ref="chart">
            <IgbNumericAngleAxis
            StartAngleOffset="-90"
            MinimumValue="0"
            MaximumValue="360"
            Interval="30"
            Name="angleAxis"
            @ref="angleAxis">
            </IgbNumericAngleAxis>
            
            <IgbNumericRadiusAxis
            RadiusExtentScale="0.9"
            InnerRadiusExtentScale="0.1"
            MinimumValue="0"
            MaximumValue="100"
            Interval="25"
            Name="radiusAxis"
            @ref="radiusAxis">
            </IgbNumericRadiusAxis>
            
            <IgbPolarScatterSeries
            AngleMemberPath="Direction"
            RadiusMemberPath="WindSpeed"
            AngleAxisName="angleAxis"
            RadiusAxisName="radiusAxis"
            MarkerType="MarkerType.Circle"
            DataSource="BoatSailingData"
            ShowDefaultTooltip="false"
            Title="Wind Speed"
            Name="PolarScatterSeries1"
            @ref="polarScatterSeries1">
            </IgbPolarScatterSeries>
            
            <IgbPolarScatterSeries
            DataSource="BoatSailingData"
            AngleAxisName="angleAxis"
            RadiusAxisName="radiusAxis"
            AngleMemberPath="Direction"
            RadiusMemberPath="BoatSpeed"
            ShowDefaultTooltip="false"
            Title="Boat Speed"
            MarkerType="MarkerType.Circle"
            Name="PolarScatterSeries2"
            @ref="polarScatterSeries2">
            </IgbPolarScatterSeries>
            
            <IgbDataToolTipLayer
            Name="DataToolTipLayer"
            @ref="dataToolTipLayer">
            </IgbDataToolTipLayer>
            
        </IgbDataChart>
        
    </div>

</div>

@code {
    protected override async Task OnInitializedAsync()
    {

    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var chart = this.chart;
        var angleAxis = this.angleAxis;
        var radiusAxis = this.radiusAxis;
        var polarScatterSeries1 = this.polarScatterSeries1;
        var polarScatterSeries2 = this.polarScatterSeries2;
        var dataToolTipLayer = this.dataToolTipLayer;



	}

    private IgbDataChart chart;
    private IgbNumericAngleAxis angleAxis;
    private IgbNumericRadiusAxis radiusAxis;
    private IgbPolarScatterSeries polarScatterSeries1;
    private IgbPolarScatterSeries polarScatterSeries2;
    private IgbDataToolTipLayer dataToolTipLayer;

    private BoatSailingData _boatSailingData = null;
    public BoatSailingData BoatSailingData
    {
        get
        {
            if (_boatSailingData == null)
            {
                _boatSailingData = new BoatSailingData(); 
            }
            return _boatSailingData;
        }
    }
    
}