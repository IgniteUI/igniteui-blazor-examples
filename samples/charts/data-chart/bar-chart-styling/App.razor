@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igComponent">
        <DataChart Height="100%" Width="100%"
                   ChartTitle="Where Online Shoppers Start Their Search"
                   TitleHorizontalAlignment="HorizontalAlignment.Left"
                   TitleLeftMargin="25"
                   TitleTopMargin="10"
                   TitleBottomMargin="10"
                   IsHorizontalZoomEnabled="false"
                   IsVerticalZoomEnabled="false">

            <CategoryYAxis Name="yAxis" Label="Shop" DataSource="Data" IsInverted="true" Gap="0.75" />
            <NumericXAxis Name="xAxis" Interval="20" LabelFormat="{0}%" />

            <BarSeries XAxisName="xAxis"
                       YAxisName="yAxis"
                       DataSource="Data"
                       ValueMemberPath="Percent"
                       ShowDefaultTooltip="true"
                       IsTransitionInEnabled="true"
                       IsHighlightingEnabled="true">
            </BarSeries>

            <CalloutLayer DataSource="CalloutItems" XMemberPath="X" YMemberPath="Y" LabelMemberPath="Label" ContentMemberPath="Label"
                          CalloutTextColor="Black" CalloutBackground="Transparent" CalloutLeaderBrush="Transparent"/>
        </DataChart>
    </div>
</div>

@code {

    private List<OnlineShoppingInfo> Data = new OnlineShoppingData();
    private List<CalloutInfo> CalloutItems { get; set; }

    protected override void OnInitialized()
    {
        DataChartCoreModule.Register(IgniteUIBlazor);
        DataChartCategoryCoreModule.Register(IgniteUIBlazor);
        DataChartCategoryModule.Register(IgniteUIBlazor);
        DataChartInteractivityModule.Register(IgniteUIBlazor);
        DataChartVerticalCategoryModule.Register(IgniteUIBlazor);
        DataChartAnnotationModule.Register(IgniteUIBlazor);
        CalloutLayerModule.Register(IgniteUIBlazor);

        InitCallouts();
    }

    public void InitCallouts()
    {
        var callouts = new List<CalloutInfo>();

        for (int i = 0; i < this.Data.Count; i++)
        {
            callouts.Add(new CalloutInfo() { X = this.Data[i].Percent, Y = i, Label = this.Data[i].Percent.ToString() + "%" });
        }

        this.CalloutItems = callouts;
    }

    public class CalloutInfo
    {
        public double X { get; set; }
        public int Y { get; set; }
        public string Label { get; set; }
    }
}