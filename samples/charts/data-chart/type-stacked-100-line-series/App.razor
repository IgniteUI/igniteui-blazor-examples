@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor;
@inject IJSRuntime JSRuntime;

<div class="igContainer">
    <div class="igComponent">
        @if (DataSource != null)
        {
            <DataChart Height="100%" Width="100%" IsVerticalZoomEnabled="true" IsHorizontalZoomEnabled="true">
                <CategoryXAxis Name="xAxis" DataSource="DataSource" Label="Country" />
                <NumericYAxis Name="yAxis" MinimumValue="0" />

                <Stacked100LineSeries XAxisName="xAxis" YAxisName="yAxis" DataSource="DataSource" ShowDefaultTooltip="true" AreaFillOpacity="1">
                    <StackedFragmentSeries ValueMemberPath="Coal" />
                    <StackedFragmentSeries ValueMemberPath="Hydro" />
                    <StackedFragmentSeries ValueMemberPath="Nuclear" />
                    <StackedFragmentSeries ValueMemberPath="Solar" />
                    <StackedFragmentSeries ValueMemberPath="Oil" />
                </Stacked100LineSeries>
            </DataChart>
        }
    </div>
</div>

@code {

    private List<Infragistics.Samples.SampleStackedItem> DataSource;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        DataChartCoreModule.Register(IgniteUIBlazor);
        DataChartCategoryCoreModule.Register(IgniteUIBlazor);
        DataChartCategoryModule.Register(IgniteUIBlazor);
        DataChartInteractivityModule.Register(IgniteUIBlazor);
        DataChartStackedModule.Register(IgniteUIBlazor);
        ColumnFragmentModule.Register(IgniteUIBlazor);
        StackedSplineSeriesModule.Register(IgniteUIBlazor);
        StackedFragmentSeriesModule.Register(IgniteUIBlazor);

        this.DataSource = SampleStackedData.Create();

    }
}
