@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor;
@inject IJSRuntime JSRuntime;

<div class="container vertical">
    <div class="options horizontal">
        <span class="options-label">Tooltip Type: </span>
        <select @onchange="OnChartTooltipTypeChanged">
            <option>Default</option>
            <option>Item</option>
            <option>Category</option>
        </select>
    </div>

    <div class="container vertical">
        @if (Data != null)
        {
            <IgbDataChart Height="100%" Width="100%" IsVerticalZoomEnabled="true"
                       IsHorizontalZoomEnabled="true" @ref="Chart">
                <IgbCategoryXAxis Name="xAxis" DataSource="Data" Label="Country" />
                <IgbNumericYAxis Name="yAxis" MinimumValue="0" AbbreviateLargeNumbers="true" />

                <IgbColumnSeries Title="Coal" XAxisName="xAxis" YAxisName="yAxis" ValueMemberPath="Coal"
                              DataSource="Data" IsTransitionInEnabled="true" ShowDefaultTooltip="true"/>
                <IgbColumnSeries Title="Hydro" XAxisName="xAxis" YAxisName="yAxis" ValueMemberPath="Hydro"
                              DataSource="Data" IsTransitionInEnabled="true" ShowDefaultTooltip="true"/>
                <IgbColumnSeries Title="Nuclear" XAxisName="xAxis" YAxisName="yAxis" ValueMemberPath="Nuclear"
                              DataSource="Data" IsTransitionInEnabled="true" ShowDefaultTooltip="true"/>
                <IgbColumnSeries Title="Gas" XAxisName="xAxis" YAxisName="yAxis" ValueMemberPath="Gas"
                              DataSource="Data" IsTransitionInEnabled="true" ShowDefaultTooltip="true"/>
                <IgbColumnSeries Title="Oil" XAxisName="xAxis" YAxisName="yAxis" ValueMemberPath="Oil"
                              DataSource="Data" IsTransitionInEnabled="true" ShowDefaultTooltip="true"/>
            </IgbDataChart>
        }
    </div>
</div>

@code {

    private List<EnergyProductionData.Energy> Data;
    private IgbDataChart Chart;

    private CategoryToolTipLayer CategoryTooltip = new CategoryToolTipLayer();
    private ItemToolTipLayer ItemTooltip = new ItemToolTipLayer();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        IgbDataChartCoreModule.Register(IgniteUIBlazor);
        IgbDataChartCategoryModule.Register(IgniteUIBlazor);
        IgbNumberAbbreviatorModule.Register(IgniteUIBlazor);
        IgbDataChartInteractivityModule.Register(IgniteUIBlazor);
        IgbItemToolTipLayerModule.Register(IgniteUIBlazor);
        IgbCategoryToolTipLayerModule.Register(IgniteUIBlazor);

        this.Data = EnergyProductionData.Generate();
    }

    private void OnChartTooltipTypeChanged(ChangeEventArgs e)
    {
        switch (e.Value)
        {
            case "Default":
                {
                    this.Chart.Series.Remove(this.ItemTooltip);
                    this.Chart.Series.Remove(this.CategoryTooltip);
                    break;
                }
            case "Item":
                {
                    this.Chart.Series.Add(this.ItemTooltip);
                    this.Chart.Series.Remove(this.CategoryTooltip);
                    break;
                }
            case "Category":
                {
                    this.Chart.Series.Remove(this.ItemTooltip);
                    this.Chart.Series.Add(this.CategoryTooltip);
                    break;
                }
        }
    }
}
