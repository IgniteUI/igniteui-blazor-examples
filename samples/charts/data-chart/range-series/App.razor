@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">

    <div class="options vertical">

        <span class="legend-title">Legend: </span>
        <div class="legend">
            <Legend @ref="Legend" Orientation="LegendOrientation.Horizontal" />
        </div>

        <div class="overlay-right" >
            <div class="options horizontal" >
                <label class="options-label">Range Series: </label>
                <select value=@SeriesType @onchange="OnSeriesTypeChanged">
                    <option>Area</option>
                    <option>Column</option>
                </select>
            </div>
        </div>
    </div>

    <div class="container vertical">
        @if (Data != null)
        {
        <DataChart Height="100%" Width="100%"
                   ChartTitle="Annual Temperature Changes"
                   IsHorizontalZoomEnabled="false"
                   IsVerticalZoomEnabled="false"
                   Legend="Legend"
                   @ref="Chart">

            <CategoryXAxis Name="xAxis"
                           Label="Year"
                           Gap="0.5"
                           DataSource="Data" />
            <NumericYAxis Name="yAxis"
                          MinimumValue="20"
                          Title="Temperature (ï¿½C)" />

            @if (SeriesType == "Area")
            {
                <RangeAreaSeries HighMemberPath="High"
                                 LowMemberPath="Low"
                                 XAxisName="xAxis"
                                 YAxisName="yAxis"
                                 Thickness="0"
                                 DataSource="Data"
                                 Title="Weather Forecast">

                </RangeAreaSeries>
            }
            @if (SeriesType == "Column")
            {
                <RangeColumnSeries HighMemberPath="High"
                                 LowMemberPath="Low"
                                 XAxisName="xAxis"
                                 YAxisName="yAxis"
                                 Thickness="0"
                                 DataSource="Data"
                                 Title="Weather Forecast">

                </RangeColumnSeries>
            }
        </DataChart>
        }
    </div>
</div>

@code {

    private List<SampleRangeItem> Data;
    private DataChart _Chart;
    private DataChart Chart
    {
        get { return _Chart; }
        set
        {
            _Chart = value;
            SeriesType = "Column";
            StateHasChanged();
        }
    }

    private Legend legend;
    private Legend Legend
    {
        get { return legend; }
        set
        {
            legend = value;
            StateHasChanged();
        }
    }
    private string seriesType;
    private string SeriesType
    {
        get { return seriesType; }
        set
        {
            seriesType = value;
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        IgbDataChartCoreModule.Register(IgniteUIBlazor);
        IgbDataChartCategoryModule.Register(IgniteUIBlazor);
        IgbDataChartInteractivityModule.Register(IgniteUIBlazor);

        IgbLegendModule.Register(IgniteUIBlazor);
        Data = SampleRangeData.Create();
    }

    public void OnSeriesTypeChanged(ChangeEventArgs e)
    {
        var selectedSeries = e.Value.ToString();
        SeriesType = selectedSeries;
    }
}