@using IgniteUI.Blazor.Controls;


<div class="container vertical">
    <div class="legend-title">
        Annual Birth Rates by World Region
    </div>
    <div class="legend">
        <IgbLegend
        Orientation="LegendOrientation.Horizontal"
        Name="Legend"
        @ref="legend">
        </IgbLegend>
        
    </div>

    <div class="container vertical fill">
        <IgbDataChart
        IsHorizontalZoomEnabled="false"
        IsVerticalZoomEnabled="false"
        Name="chart"
        @ref="chart">
            <IgbCategoryXAxis
            DataSource="ContinentsBirthRate"
            Gap="0.75"
            Label="Year"
            Name="xAxis"
            @ref="xAxis">
            </IgbCategoryXAxis>
            
            <IgbNumericYAxis
            MinimumValue="0"
            MaximumValue="140"
            Interval="20"
            Title="Millions of Births"
            TitleAngle="-90"
            LabelFormat="{0} m"
            Name="yAxis"
            @ref="yAxis">
            </IgbNumericYAxis>
            
            <IgbStackedLineSeries
            XAxisName="xAxis"
            YAxisName="yAxis"
            MarkerType="MarkerType.Circle"
            DataSource="ContinentsBirthRate"
            ShowDefaultTooltip="false"
            Name="StackedLineSeries"
            @ref="stackedLineSeries">
                <IgbStackedFragmentSeries
                Name="s1"
                @ref="s1"
                Title="@("Asia")"
                ValueMemberPath="Asia">
                </IgbStackedFragmentSeries>
                
                <IgbStackedFragmentSeries
                Name="s2"
                @ref="s2"
                ValueMemberPath="Africa"
                Title="@("Africa")">
                </IgbStackedFragmentSeries>
                
                <IgbStackedFragmentSeries
                Name="s3"
                @ref="s3"
                ValueMemberPath="Europe"
                Title="@("Europe")">
                </IgbStackedFragmentSeries>
                
                <IgbStackedFragmentSeries
                Name="s4"
                @ref="s4"
                ValueMemberPath="NorthAmerica"
                Title="@("North America")">
                </IgbStackedFragmentSeries>
                
                <IgbStackedFragmentSeries
                Name="s5"
                @ref="s5"
                ValueMemberPath="SouthAmerica"
                Title="@("South America")">
                </IgbStackedFragmentSeries>
                
            </IgbStackedLineSeries>
            
            <IgbDataToolTipLayer
            Name="DataToolTipLayer"
            @ref="dataToolTipLayer">
            </IgbDataToolTipLayer>
            
        </IgbDataChart>
        
    </div>

</div>

@code {
    protected override async Task OnInitializedAsync()
    {

    }

    private Action BindElements { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var legend = this.legend;
        var chart = this.chart;
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        var stackedLineSeries = this.stackedLineSeries;
        var s1 = this.s1;
        var s2 = this.s2;
        var s3 = this.s3;
        var s4 = this.s4;
        var s5 = this.s5;
        var dataToolTipLayer = this.dataToolTipLayer;

        this.BindElements = () => {
            chart.Legend = this.legend;
        };
        this.BindElements();


	}

    private IgbLegend legend;
    private IgbDataChart chart;
    private IgbCategoryXAxis xAxis;
    private IgbNumericYAxis yAxis;
    private IgbStackedLineSeries stackedLineSeries;
    private IgbStackedFragmentSeries s1;
    private IgbStackedFragmentSeries s2;
    private IgbStackedFragmentSeries s3;
    private IgbStackedFragmentSeries s4;
    private IgbStackedFragmentSeries s5;
    private IgbDataToolTipLayer dataToolTipLayer;

    private ContinentsBirthRate _continentsBirthRate = null;
    public ContinentsBirthRate ContinentsBirthRate
    {
        get
        {
            if (_continentsBirthRate == null)
            {
                _continentsBirthRate = new ContinentsBirthRate(); 
            }
            return _continentsBirthRate;
        }
    }
    
}