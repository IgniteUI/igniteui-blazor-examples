@using IgniteUI.Blazor.Controls

<div class="container vertical">
    <div class="container vertical fill">
        <IgbDataChart
        Name="chart"
        @ref="chart"
        IsHorizontalZoomEnabled="true"
        IsVerticalZoomEnabled="true"
        ChartTitle="Population vs. Public Debt vs. GDP"
        TitleTopMargin="10"
        TitleBottomMargin="0">
            <IgbNumericXAxis
            Name="xAxis"
            @ref="xAxis"
            Title="Population"
            MinimumValue="100"
            MaximumValue="10000000000"
            IsLogarithmic="true"
            AbbreviateLargeNumbers="true">
            </IgbNumericXAxis>

            <IgbNumericYAxis
            Name="yAxis"
            @ref="yAxis"
            Title="Public Debt per GDP (%)"
            TitleLeftMargin="10"
            IsLogarithmic="true"
            AbbreviateLargeNumbers="true"
            MaximumValue="1000">
            </IgbNumericYAxis>

            <IgbBubbleSeries
            Name="bubbleSeries1"
            @ref="bubbleSeries1"
            XMemberPath="Population"
            YMemberPath="PublicDebt"
            RadiusMemberPath="GdpPerPerson"
            RadiusScale="SizeScale1"
            FillMemberPath="GdpPerPerson"
            YMemberAsLegendUnit="%"
            YMemberAsLegendLabel="Debt"
            XMemberAsLegendLabel="Population"
            RadiusMemberAsLegendLabel="GDP"
            Title="Country"
            XAxisName="xAxis"
            YAxisName="yAxis"
            DataSource="WorldStats"
            MarkerType="MarkerType.Circle"
            MarkerOutline="black"
            MarkerThickness="1"
            ShowDefaultTooltip="true"
            FillScale="ValueBrushScale1">
            </IgbBubbleSeries>

            <IgbDataToolTipLayer
            Name="dataToolTipLayer"
            @ref="dataToolTipLayer"
            ValueRowMarginTop="1"
            LabelTextMarginTop="1"
            TitleTextMarginTop="1"
            UnitsTextMarginTop="1"
            ValueRowMarginBottom="1"
            LabelTextMarginBottom="1"
            TitleTextMarginBottom="1"
            UnitsTextMarginBottom="1"
            UnitsTextMarginRight="5"
            ValueTextMarginLeft="10"
            LabelTextMarginLeft="1"
            GroupingMode="DataToolTipLayerGroupingMode.Grouped"
            LayoutMode="DataLegendLayoutMode.Vertical"
            BadgeShape="LegendItemBadgeShape.Hidden"
            IncludedColumns="@(new string[] { "X", "Y", "Radius" })"
            HeaderRowVisible="false">
            </IgbDataToolTipLayer>

        </IgbDataChart>

    </div>
</div>

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var chart = this.chart;
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        var bubbleSeries1 = this.bubbleSeries1;
        var dataToolTipLayer = this.dataToolTipLayer;

    }

    private IgbDataChart chart;
    private IgbNumericXAxis xAxis;
    private IgbNumericYAxis yAxis;
    private IgbBubbleSeries bubbleSeries1;
    private IgbSizeScale _sizeScale1 = null;
    public IgbSizeScale SizeScale1
    {
        get
        {
            if (this._sizeScale1 == null)
            {
                var sizeScale1 = new IgbSizeScale();
                sizeScale1.IsLogarithmic = false;
                sizeScale1.MinimumValue = 10;
                sizeScale1.MaximumValue = 120;
                this._sizeScale1 = sizeScale1;
            }
            return this._sizeScale1;
        }
    }
    private IgbValueBrushScale _valueBrushScale1 = null;
    public IgbValueBrushScale ValueBrushScale1
    {
        get
        {
            if (this._valueBrushScale1 == null)
            {
                var valueBrushScale1 = new IgbValueBrushScale();
                valueBrushScale1.IsLogarithmic = false;
                valueBrushScale1.MinimumValue = 0;
                valueBrushScale1.MaximumValue = 260000;
                valueBrushScale1.Brushes = "#89b5fa #146cf7 #5290f2";
                this._valueBrushScale1 = valueBrushScale1;
            }
            return this._valueBrushScale1;
        }
    }
    private IgbDataToolTipLayer dataToolTipLayer;

    private WorldStats _worldStats = null;
    public WorldStats WorldStats
    {
        get
        {
            if (_worldStats == null)
            {
                _worldStats = new WorldStats();
            }
            return _worldStats;
        }
    }

}