@using IgniteUI.Blazor.Controls

<div class="container vertical">
    <div class="legend-title">
        Life Expectancy vs Health Expenditure
    </div>
    <div class="legend">
        <IgbLegend
        Name="legend"
        @ref="legend"
        Orientation="LegendOrientation.Horizontal">
        </IgbLegend>

    </div>
    <div class="container vertical fill">
        <IgbDataChart
        Name="chart"
        @ref="chart">
            <IgbNumericXAxis
            Name="xAxis"
            @ref="xAxis"
            Title="Life Expectancy (in years)"
            MinimumValue="72"
            MaximumValue="84"
            Interval="2">
            </IgbNumericXAxis>

            <IgbNumericYAxis
            Name="yAxis"
            @ref="yAxis"
            Title="Health Expenditure per Capita"
            AbbreviateLargeNumbers="true"
            MinimumValue="1000"
            MaximumValue="6000"
            Interval="1000">
            </IgbNumericYAxis>

            <IgbScatterSplineSeries
            Name="scatterSplineSeries1"
            @ref="scatterSplineSeries1"
            Title="Germany"
            XAxisName="xAxis"
            YAxisName="yAxis"
            XMemberPath="LifeExpectancy"
            YMemberPath="HealthExpense"
            DataSource="HealthDataForGermany"
            MarkerType="MarkerType.Circle"
            ShowDefaultTooltip="true">
            </IgbScatterSplineSeries>

            <IgbScatterSplineSeries
            Name="scatterSplineSeries2"
            @ref="scatterSplineSeries2"
            Title="France"
            XAxisName="xAxis"
            YAxisName="yAxis"
            XMemberPath="LifeExpectancy"
            YMemberPath="HealthExpense"
            DataSource="HealthDataForFrance"
            MarkerType="MarkerType.Circle"
            ShowDefaultTooltip="true">
            </IgbScatterSplineSeries>

            <IgbDataToolTipLayer
            Name="dataToolTipLayer"
            @ref="dataToolTipLayer">
            </IgbDataToolTipLayer>

        </IgbDataChart>

    </div>
</div>

@code {

    private Action BindElements { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var legend = this.legend;
        var chart = this.chart;
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        var scatterSplineSeries1 = this.scatterSplineSeries1;
        var scatterSplineSeries2 = this.scatterSplineSeries2;
        var dataToolTipLayer = this.dataToolTipLayer;

        this.BindElements = () => {
            chart.Legend = this.legend;
        };
        this.BindElements();

    }

    private IgbLegend legend;
    private IgbDataChart chart;
    private IgbNumericXAxis xAxis;
    private IgbNumericYAxis yAxis;
    private IgbScatterSplineSeries scatterSplineSeries1;
    private IgbScatterSplineSeries scatterSplineSeries2;
    private IgbDataToolTipLayer dataToolTipLayer;

    private HealthDataForGermany _healthDataForGermany = null;
    public HealthDataForGermany HealthDataForGermany
    {
        get
        {
            if (_healthDataForGermany == null)
            {
                _healthDataForGermany = new HealthDataForGermany();
            }
            return _healthDataForGermany;
        }
    }

    private HealthDataForFrance _healthDataForFrance = null;
    public HealthDataForFrance HealthDataForFrance
    {
        get
        {
            if (_healthDataForFrance == null)
            {
                _healthDataForFrance = new HealthDataForFrance();
            }
            return _healthDataForFrance;
        }
    }

}