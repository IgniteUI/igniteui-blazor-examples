@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">
    <div class="options horizontal">
        <span class="options-label"> Marker Type: </span>
        <select @bind="ChartMarkerType">
            <option>@MarkerType.Automatic</option>
            <option>@MarkerType.Circle</option>
            <option>@MarkerType.Triangle</option>
            <option>@MarkerType.Pyramid</option>
            <option>@MarkerType.Square</option>
            <option>@MarkerType.Diamond</option>
            <option>@MarkerType.Pentagon</option>
            <option>@MarkerType.Hexagon</option>
            <option>@MarkerType.Tetragram</option>
            <option>@MarkerType.Pentagram</option>
            <option>@MarkerType.Hexagram</option>
            <option>@MarkerType.None</option>
        </select>
    </div>
    <div class="container vertical">
        @if (Data != null)
        {
            <IgbDataChart Height="100%" Width="100%"
                       IsHorizontalZoomEnabled="true"
                       IsVerticalZoomEnabled="true">
                <IgbCategoryXAxis Name="xAxis" DataSource="Data" Label="Year" />
                <IgbNumericYAxis Name="yAxis" MinimumValue="0" />

                <IgbLineSeries XAxisName="xAxis" YAxisName="yAxis" DataSource="Data" ValueMemberPath="USA" MarkerType="ChartMarkerType" />
                <IgbLineSeries XAxisName="xAxis" YAxisName="yAxis" DataSource="Data" ValueMemberPath="CHN" MarkerType="ChartMarkerType" />
                <IgbLineSeries XAxisName="xAxis" YAxisName="yAxis" DataSource="Data" ValueMemberPath="RUS" MarkerType="ChartMarkerType" />
            </IgbDataChart>
        }
    </div>
</div>

@code {

    private List<OlympicMedals> Data;
    private MarkerType ChartMarkerType = MarkerType.Automatic;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        IgbDataChartCoreModule.Register(IgniteUIBlazor);
        IgbDataChartInteractivityModule.Register(IgniteUIBlazor);
        IgbDataChartCategoryModule.Register(IgniteUIBlazor);

        this.Data = this.GenerateData();
    }

    private List<OlympicMedals> GenerateData() {

        var olympicMedals = new List<OlympicMedals>();
        olympicMedals.Add(new OlympicMedals() { Year = "1996", USA = 148, CHN = 110, RUS = 95 });
        olympicMedals.Add(new OlympicMedals() { Year = "2000", USA = 142, CHN = 115, RUS = 91 });
        olympicMedals.Add(new OlympicMedals() { Year = "2004", USA = 134, CHN = 121, RUS = 86 });
        olympicMedals.Add(new OlympicMedals() { Year = "2008", USA = 131, CHN = 129, RUS = 65 });
        olympicMedals.Add(new OlympicMedals() { Year = "2012", USA = 135, CHN = 115, RUS = 77 });
        olympicMedals.Add(new OlympicMedals() { Year = "2016", USA = 146, CHN = 112, RUS = 88 });

        return olympicMedals;
    }
}
