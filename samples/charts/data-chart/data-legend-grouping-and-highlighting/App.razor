@using IgniteUI.Blazor.Controls

<div class="container vertical">
    <div class="legend">
        <IgbDataLegend
        Name="Legend"
        @ref="legend">
        </IgbDataLegend>

    </div>
    <div class="container vertical fill">
        <IgbDataChart
        ShouldAutoExpandMarginForInitialLabels="true"
        ComputedPlotAreaMarginMode="ComputedPlotAreaMarginMode.Series"
        Name="chart"
        @ref="chart"
        HighlightedValuesDisplayMode="SeriesHighlightedValuesDisplayMode.Overlay">
            <IgbCategoryXAxis
            Name="xAxis"
            @ref="xAxis"
            DataSource="OlympicMedalsTopCountriesWithTotals"
            Label="Year">
            </IgbCategoryXAxis>

            <IgbNumericYAxis
            Name="yAxis"
            @ref="yAxis">
            </IgbNumericYAxis>

            <IgbColumnSeries
            Name="ColumnSeries1"
            @ref="columnSeries1"
            XAxisName="xAxis"
            YAxisName="yAxis"
            DataSource="OlympicMedalsTopCountriesWithTotals"
            Title="America"
            ValueMemberPath="America"
            HighlightedValueMemberPath="AmericaGold"
            HighlightedTitleSuffix="">
            </IgbColumnSeries>

            <IgbColumnSeries
            Name="ColumnSeries2"
            @ref="columnSeries2"
            XAxisName="xAxis"
            YAxisName="yAxis"
            DataSource="OlympicMedalsTopCountriesWithTotals"
            Title="China"
            ValueMemberPath="China"
            HighlightedValueMemberPath="ChinaGold"
            HighlightedTitleSuffix="">
            </IgbColumnSeries>

            <IgbColumnSeries
            Name="ColumnSeries3"
            @ref="columnSeries3"
            XAxisName="xAxis"
            YAxisName="yAxis"
            DataSource="OlympicMedalsTopCountriesWithTotals"
            Title="Russia"
            ValueMemberPath="Russia"
            HighlightedValueMemberPath="RussiaGold"
            HighlightedTitleSuffix="">
            </IgbColumnSeries>

        </IgbDataChart>

    </div>
</div>

@code {

    private Action BindElements { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var legend = this.legend;
        var chart = this.chart;
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        var columnSeries1 = this.columnSeries1;
        var columnSeries2 = this.columnSeries2;
        var columnSeries3 = this.columnSeries3;

        this.BindElements = () => {
            legend.Target = this.chart;
        };
        this.BindElements();

    }

    private IgbDataLegend legend;
    private IgbDataChart chart;
    private IgbCategoryXAxis xAxis;
    private IgbNumericYAxis yAxis;
    private IgbColumnSeries columnSeries1;
    private IgbColumnSeries columnSeries2;
    private IgbColumnSeries columnSeries3;

    private OlympicMedalsTopCountriesWithTotals _olympicMedalsTopCountriesWithTotals = null;
    public OlympicMedalsTopCountriesWithTotals OlympicMedalsTopCountriesWithTotals
    {
        get
        {
            if (_olympicMedalsTopCountriesWithTotals == null)
            {
                _olympicMedalsTopCountriesWithTotals = new OlympicMedalsTopCountriesWithTotals();
            }
            return _olympicMedalsTopCountriesWithTotals;
        }
    }

}