@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">
    <div class="igComponent">

        <DataChart @ref="DataChartRef" Height="100%" Width="100%"
                   Subtitle="Wind Speed vs Boat Speed"
                   SubtitleTopMargin="10"
                   IsHorizontalZoomEnabled="true"
                   IsVerticalZoomEnabled="true">
            <NumericAngleAxis Name="angleAxis" StartAngleOffset="-90"
                              Interval="30"
                              MinimumValue="0"
                              MaximumValue="360" LabelFontWeight="Bold" />
            <NumericRadiusAxis Name="radiusAxis"
                               RadiusExtentScale="0.9"
                               InnerRadiusExtentScale="0.1"
                               Interval="25"
                               MinimumValue="0"
                               MaximumValue="100" />

            <PolarAreaSeries Name="series1"
                             DataSource="@DataSource"
                             AngleAxisName="angleAxis"
                             AngleMemberPath="Direction"
                             RadiusMemberPath="WindSpeed"
                             RadiusAxisName="radiusAxis"
                             ShowDefaultTooltip="true"
                             AreaFillOpacity="0.30"
                             Thickness="3"
                             Title="Wind Speed"
                             MarkerType="@MarkerType.Circle" />
            <PolarAreaSeries Name="series2"
                             DataSource="@DataSource"
                             AngleAxisName="angleAxis"
                             AngleMemberPath="Direction"
                             RadiusMemberPath="BoatSpeed"
                             RadiusAxisName="radiusAxis"
                             ShowDefaultTooltip="true"
                             AreaFillOpacity="0.30"
                             Thickness="3"
                             Title="Boat Speed"
                             MarkerType="@MarkerType.Circle"/>
        </DataChart>

    </div>
</div>

@code {

    private List<SamplePolarItem> DataSource;
    private DataChart _dataChart;
    private DataChart DataChartRef
    {
        get { return _dataChart; }
        set
        {
            _dataChart = value;
            if (this.DataChartRef != null)
            {
                this.DataChartRef.MarkerBrushes = "White";
                this.DataChartRef.MarkerOutlines = "rgb(140, 231, 217) rgb(238, 88, 121)";
                this.DataChartRef.Brushes = "rgb(140, 231, 217) rgb(238, 88, 121)";
                this.DataChartRef.Outlines = "rgb(140, 231, 217) rgb(238, 88, 121)";

                StateHasChanged();
            }
        }
    }

    protected override void OnInitialized()
    {
        DataChartCoreModule.Register(IgniteUIBlazor);
        DataChartPolarModule.Register(IgniteUIBlazor);
        DataChartPolarCoreModule.Register(IgniteUIBlazor);
        DataChartInteractivityModule.Register(IgniteUIBlazor);

        DataSource = SamplePolarData.Create();
    }

}