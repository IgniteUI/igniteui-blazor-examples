@using IgniteUI.Blazor.Controls

<div class="container vertical">
    <div class="options vertical">
        <IgbPropertyEditorPanel
        Name="PropertyEditor"
        @ref="propertyEditor"

        DescriptionType="Treemap"
        IsHorizontal="true"
        IsWrappingEnabled="true">
            <IgbPropertyEditorPropertyDescription
            PropertyPath="HighlightingMode"
            Name="HighlightedModeEditor"
            @ref="highlightedModeEditor"
            Label="Highlighting Mode: "
            PrimitiveValue="@("Brighten")"
            DropDownValues="@(new string[] { "Brighten", "FadeOthers" })">
            </IgbPropertyEditorPropertyDescription>

        </IgbPropertyEditorPanel>

    </div>
    <div class="legend-title">
        Comparing Population of Countries
    </div>
    <div class="container vertical fill">
        <IgbTreemap
        Name="treemap"
        @ref="treemap"
        DataSource="CountyHierarchicalData"
        ParentIdMemberPath="Parent"
        IdMemberPath="Name"
        LabelMemberPath="Name"
        ValueMemberPath="Population"
        FillScaleMode="TreemapFillScaleMode.Value"
        FillScaleMinimumValue="0"
        FillScaleMaximumValue="1500000000"
        FillBrushes="#4e62cf #8a58d6"
        IsFillScaleLogarithmic="true"
        RootTitle="Countries"
        HeaderDisplayMode="TreemapHeaderDisplayMode.Overlay"
        ParentNodeBottomPadding="0"
        ParentNodeLeftPadding="0"
        ParentNodeRightPadding="0"
        ParentNodeTopPadding="0"
        Outline="black"
        StrokeThickness="1">
        </IgbTreemap>

    </div>
</div>

@code {

    private Action BindElements { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var propertyEditor = this.propertyEditor;
        var highlightedModeEditor = this.highlightedModeEditor;
        var treemap = this.treemap;

        this.BindElements = () => {
            propertyEditor.Target = this.treemap;
        };
        this.BindElements();

    }

    private IgbPropertyEditorPanel propertyEditor;
    private IgbPropertyEditorPropertyDescription highlightedModeEditor;
    private IgbTreemap treemap;

    private CountyHierarchicalData _countyHierarchicalData = null;
    public CountyHierarchicalData CountyHierarchicalData
    {
        get
        {
            if (_countyHierarchicalData == null)
            {
                _countyHierarchicalData = new CountyHierarchicalData();
            }
            return _countyHierarchicalData;
        }
    }

}