@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

    <div class="container vertical">

        <div class="options vertical">
            <div class="options horizontal">
                <button @onclick="onClickSliceVer" style="width: 9rem">Slice Vertically</button>
                <button @onclick="onClickStripVer" style="width: 10rem">Stripped Vertically</button>
                <button @onclick="onClickSquarified" style="width: 8rem">Squarified</button>

                <label class="options-label">Header Display Mode </label>
                <select  @bind="@TreeHeaderMode">
                    <option>@TreemapHeaderDisplayMode.Header</option>
                    <option>@TreemapHeaderDisplayMode.Overlay</option>
                </select>
            </div>

            <div class="options horizontal">
                <button @onclick="onClickSliceHor" style="width: 9rem">Slice Horizontally</button>
                <button @onclick="onClickStripHor" style="width: 10rem">Stripped Horizontally</button>
                @* this label displays info about currently selected item in Treemap *@
                <label style="margin-left: 0.5rem">@SelectedItemInfo</label>
            </div>
        </div>

        <div class="options vertical">
            <span class="legend-title">Comparing Population of Countries</span>
        </div>

        <div class="container vertical" style="padding: 0.75rem; padding-top: 0.5rem;">

            <Treemap Height="100%" Width="100%"
                     DataSource="Data"
                     ParentIdMemberPath="Parent"
                     IdMemberPath="Name"
                     LabelMemberPath="Name"
                     ValueMemberPath="Pop"
                     LayoutType="@TreeLayout"
                     LayoutOrientation="@TreeOrientation"
                     FillBrushes="#4e62cf, #8a58d6"
                     IsFillScaleLogarithmic="true"
                     NodePointerEnter="@onNodePointerEnter"
                     RootTitle="Countries"

                     HeaderDisplayMode="@TreeHeaderMode"
                     ParentNodeBottomPadding="0"
                     ParentNodeLeftPadding="0"
                     ParentNodeRightPadding="0"
                     ParentNodeTopPadding="0">
            </Treemap>
            @**@
        </div>
    </div>

@code {

    protected List<CountryInfo> Data;
    protected TreemapLayoutType TreeLayout = TreemapLayoutType.Squarified;
    protected TreemapOrientation TreeOrientation = TreemapOrientation.Vertical;
    protected TreemapHeaderDisplayMode TreeHeaderMode = TreemapHeaderDisplayMode.Overlay;
    protected string SelectedItemInfo = "Select Tree Node";

    protected override void OnInitialized()
    {
        TreemapModule.Register(IgniteUIBlazor);

        this.Data = CountryTreeData.Create();

        Console.WriteLine("CountryTreeData " + this.Data.Count);
    }

    // handling NodePointerEnter action
    private void onNodePointerEnter(TreemapNodePointerEventArgs arg)
    {
        var item = arg.Item as CountryInfo;
        if (item == null) return;

        if (item.Parent == null)
        {
            this.SelectedItemInfo = "" + item.Name;
        }
        else
        {
            var population = (item.Pop / 1000000).ToString("0M people");
            this.SelectedItemInfo = "" + item.Name + ": " + population;
        }
        this.StateHasChanged();
    }

    private void onClickSquarified()
    {
        TreeLayout = TreemapLayoutType.Squarified;
    }

    private void onClickSliceVer()
    {
        TreeLayout = TreemapLayoutType.SliceAndDice;
        TreeOrientation = TreemapOrientation.Vertical;
    }

    private void onClickSliceHor()
    {
        TreeLayout = TreemapLayoutType.SliceAndDice;
        TreeOrientation = TreemapOrientation.Horizontal;
    }

    private void onClickStripVer()
    {
        TreeLayout = TreemapLayoutType.Stripped;
        TreeOrientation = TreemapOrientation.Vertical;
    }

    private void onClickStripHor()
    {
        TreeLayout = TreemapLayoutType.Stripped;
        TreeOrientation = TreemapOrientation.Horizontal;
    }
}