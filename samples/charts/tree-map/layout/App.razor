@using IgniteUI.Blazor.Controls

@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">
	    <div class="options vertical">
        <IgbPropertyEditorPanel
        
        DescriptionType="Treemap"
        IsHorizontal="true"
        IsWrappingEnabled="true"
        Name="propertyEditorPanel1"
        @ref="propertyEditorPanel1">
            <IgbPropertyEditorPropertyDescription
            PropertyPath="LayoutType"
            Label="Layout"
            PrimitiveValue="@("Squarified")"
            Name="LayoutTypeEditor"
            @ref="layoutTypeEditor">
            </IgbPropertyEditorPropertyDescription>
            <IgbPropertyEditorPropertyDescription
            PropertyPath="LayoutOrientation"
            PrimitiveValue="@("Vertical")"
            Label="Orientation"
            Name="LayoutOrientationEditor"
            @ref="layoutOrientationEditor">
            </IgbPropertyEditorPropertyDescription>
            <IgbPropertyEditorPropertyDescription
            PropertyPath="HeaderDisplayMode"
            PrimitiveValue="@("Overlay")"
            Label="Headers"
            Name="HeaderDisplayModeEditor"
            @ref="headerDisplayModeEditor">
            </IgbPropertyEditorPropertyDescription>
            <IgbPropertyEditorPropertyDescription
            PropertyPath="LabelVerticalAlignment"
            PrimitiveValue="@("Center")"
            Label="Labels"
            Name="LabelVerticalAlignmentEditor"
            @ref="labelVerticalAlignmentEditor">
            </IgbPropertyEditorPropertyDescription>
        </IgbPropertyEditorPanel>
    </div>
	
	    <div class="legend-title">
        Comparing Population of Countries
    </div>
    
	
    <div class="container vertical fill">
        <IgbTreemap
        ValueMemberPath="Population"
        RootTitle="Countries"
        ParentIdMemberPath="Parent"
        LabelMemberPath="Name"
        IdMemberPath="Name"
        DataSource="CountyHierarchicalData"
        FillBrushes="#299e41 #4e62cf #5e359c"
        IsFillScaleLogarithmic="true"
        HeaderDisplayMode="TreemapHeaderDisplayMode.Overlay"
        ParentNodeLeftPadding="0"
        ParentNodeTopPadding="0"
        ParentNodeRightPadding="0"
        ParentNodeBottomPadding="0"
        Name="treemap"
        @ref="treemap">
        </IgbTreemap>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
    }

	private Action BindElements { get; set; }

	protected override void OnAfterRender(bool firstRender)
	{
		var propertyEditorPanel1 = this.propertyEditorPanel1;
		var layoutTypeEditor = this.layoutTypeEditor;
		var layoutOrientationEditor = this.layoutOrientationEditor;
		var headerDisplayModeEditor = this.headerDisplayModeEditor;
		var labelVerticalAlignmentEditor = this.labelVerticalAlignmentEditor;
		var treemap = this.treemap;

        this.BindElements = () => {
            propertyEditorPanel1.Target = this.treemap;
        };
        this.BindElements();
	}

	private IgbPropertyEditorPanel propertyEditorPanel1;
	private IgbPropertyEditorPropertyDescription layoutTypeEditor;
	private IgbPropertyEditorPropertyDescription layoutOrientationEditor;
	private IgbPropertyEditorPropertyDescription headerDisplayModeEditor;
	private IgbPropertyEditorPropertyDescription labelVerticalAlignmentEditor;
	private IgbTreemap treemap;


    private CountyHierarchicalData _countyHierarchicalData = null;
    public CountyHierarchicalData CountyHierarchicalData
    {
        get
        {
            if (_countyHierarchicalData == null)
            {
                _countyHierarchicalData = new CountyHierarchicalData(); 
            }
            return _countyHierarchicalData;
        }
    }
    
}