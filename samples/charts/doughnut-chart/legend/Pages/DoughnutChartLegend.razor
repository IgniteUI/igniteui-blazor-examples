@page "/DoughnutChartLegend"

@using Infragistics.Blazor.Controls
@inject IInfragisticsBlazor InfragisticsBlazor;
@inject IJSRuntime JSRuntime;


@*TODO  : legend not exposed*@

<div class="igContainer">
    <div class="igLegend">
        <Legend ></Legend>
		<ItemLegend @ref=ItemLegend/>
		
    </div>
    <div class="igComponent">

        @if (DataSource != null)
        {
            <DoughnutChart Height="100%" Width="100%" @ref="doughnutChart">
                <RingSeries DataSource="@DataSource"
                            LabelMemberPath="Summary"
                            ValueMemberPath="MarketShare"
                            LegendLabelMemberPath="Company"
                            Outlines="white">
                </RingSeries>
            </DoughnutChart>
        }

    </div>
</div>

@code {

    private List<DataItem> DataSource;
   
    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Console.WriteLine("Sample runtime: " + InfragisticsBlazor.JsRuntime);
        Console.WriteLine("Sample OnInitialized...");
        DoughnutChartModule.Register(InfragisticsBlazor);
   
        var dataItems = new List<DataItem>();
        dataItems.Add(new DataItem() { MarketShare = 30, Company = "Google", });
        dataItems.Add(new DataItem() { MarketShare = 25, Company = "Apple", });
        dataItems.Add(new DataItem() { MarketShare = 20, Company = "Microsoft", });
        dataItems.Add(new DataItem() { MarketShare = 15, Company = "Samsung", });
        dataItems.Add(new DataItem() { MarketShare = 10, Company = "Other", });

        DataSource = dataItems;

		//doughnutChart.legend = ItemLegend;

    }

    public class DataItem
    {
        public string Company { get; set; }
        public double MarketShare { get; set; }

        public string Summary { get { return Company + " " + MarketShare + "%"; } }
    }
    
}
