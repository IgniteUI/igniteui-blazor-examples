@using IgniteUI.Blazor.Controls

@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">
	<div class="options vertical">
        <IgbPropertyEditorPanel
        
        DescriptionType="Sparkline"
        IsHorizontal="true"
        IsWrappingEnabled="true"
        Name="propertyEditorPanel1"
        @ref="propertyEditorPanel1">
            <IgbPropertyEditorPropertyDescription
            PropertyPath="UnknownValuePlotting"
            Label="Unknown Value Plotting"
            ValueType="PropertyEditorValueType.EnumValue"
            ShouldOverrideDefaultEditor="true"
            DropDownNames="@(new string[] { "LinearInterpolate", "DontPlot" })"
            DropDownValues="@(new string[] { "LinearInterpolate", "DontPlot" })"
            PrimitiveValue="@("LinearInterpolate")">
            </IgbPropertyEditorPropertyDescription>
        </IgbPropertyEditorPanel>
    </div>
	
	
    <div class="container vertical fill">
        <IgbSparkline
        DataSource="SparklineUnknownData"
        ValueMemberPath="Value"
        LabelMemberPath="Label"
        DisplayType="SparklineDisplayType.Area"
        UnknownValuePlotting="UnknownValuePlotting.LinearInterpolate"
        Name="chart"
        @ref="chart">
        </IgbSparkline>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
    }

	private Action BindElements { get; set; }

	protected override void OnAfterRender(bool firstRender)
	{
		var propertyEditorPanel1 = this.propertyEditorPanel1;
		var chart = this.chart;

        this.BindElements = () => {
            propertyEditorPanel1.Target = this.chart;
        };
        this.BindElements();
	}

	private IgbPropertyEditorPanel propertyEditorPanel1;
	private IgbSparkline chart;


    private SparklineUnknownData _sparklineUnknownData = null;
    public SparklineUnknownData SparklineUnknownData
    {
        get
        {
            if (_sparklineUnknownData == null)
            {
                _sparklineUnknownData = new SparklineUnknownData(); 
            }
            return _sparklineUnknownData;
        }
    }
    
}