
@using IgniteUI.Blazor.Controls

<style>
    igc-icon-button::part(base):hover {
        background-color: lightgray;
    }

    .container{
        padding: 16px;
    }
</style>

<div class="container vertical">
    <IgbIconButton @ref="MenuIconButton" @onclick="ToggleNavDrawer" IconName="menu" Collection="material" Variant="@IconButtonVariant.Flat" />
    <IgbNavDrawer Open="true" @ref="NavDrawerRef">
        <IgbNavDrawerHeaderItem>
            Sample Drawer
        </IgbNavDrawerHeaderItem>

        <IgbNavDrawerItem @ref="HomeItemRef" @onclick="(args) => NavDrawerItemClick(args, HomeItemRef)">
            <IgbIcon @ref="@IconRef" slot="icon" IconName="home" Collection="material"></IgbIcon>
            <span slot="content">Home</span>
        </IgbNavDrawerItem>

        <IgbNavDrawerItem @ref="SearchItemRef" @onclick="(args) => NavDrawerItemClick(args, SearchItemRef)">
            <IgbIcon @ref="@IconRef" slot="icon" IconName="search" Collection="material"></IgbIcon>
            <span slot="content">Search</span>
        </IgbNavDrawerItem>
    </IgbNavDrawer>
</div>

@code {

    public IgbIconButton MenuIconButton { get; set; }
    public IgbIcon IconRef { get; set; }

    public IgbNavDrawer NavDrawerRef { get; set; }
    public IgbNavDrawerItem HomeItemRef { get; set; }
    public IgbNavDrawerItem SearchItemRef { get; set; }

    public List<IgbNavDrawerItem> NavDrawerItemRefs { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && this.MenuIconButton != null)
        {
            await this.MenuIconButton.EnsureReady();
            await this.MenuIconButton.RegisterIconAsync("menu", "https://unpkg.com/material-design-icons@3.0.1/navigation/svg/production/ic_menu_24px.svg", "material");
        }

        if (firstRender && this.IconRef != null)
        {
            await this.IconRef.EnsureReady();
            await this.IconRef.RegisterIconAsync("home", "https://unpkg.com/material-design-icons@3.0.1/action/svg/production/ic_home_24px.svg", "material");
            await this.IconRef.RegisterIconAsync("search", "https://unpkg.com/material-design-icons@3.0.1/action/svg/production/ic_search_24px.svg", "material");
        }

        if (firstRender)
        {
            NavDrawerItemRefs = new List<IgbNavDrawerItem>();
            await this.HomeItemRef.EnsureReady();
            NavDrawerItemRefs.Add(HomeItemRef);
            await this.SearchItemRef.EnsureReady();
            NavDrawerItemRefs.Add(SearchItemRef);
        }
    }

    public void ToggleNavDrawer(MouseEventArgs args)
    {
        NavDrawerRef.Toggle();
    }

    public void NavDrawerItemClick(MouseEventArgs args, IgbNavDrawerItem item)
    {
        item.Active = true;
        foreach (IgbNavDrawerItem i in NavDrawerItemRefs)
        {
            if(i != item)
            {
                i.Active = false;
            }
        }
    }
}