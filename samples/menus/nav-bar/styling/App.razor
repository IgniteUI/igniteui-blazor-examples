@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">
    <style>
        igc-icon {
            color: currentColor;
        }
        
        igc-navbar {
            background-color: #232121
        }
        
        igc-navbar::part(start) {
            color: #f23269;
        }
        
        igc-navbar::part(middle) {
            font-family: Titillium Web,sans-serif;
            color: #e9e8ea
        }
        
        igc-navbar::part(end) {
            color: #e9e8ea
        }
    </style>

    <IgbNavbar style="height: 4rem;">
        <IgbIcon @ref="@HomeIcon" slot="start" IconName="home" Collection="material" Size="SizableComponentSize.Large" />
        <h3>Sample App</h3>
        <IgbIcon @ref="@SearchIcon" slot="end" IconName="search" Collection="material" Size="SizableComponentSize.Large" />
        <IgbIcon @ref="@FavoriteIcon" slot="end" IconName="favorite" Collection="material" Size="SizableComponentSize.Large" />
        <IgbIcon @ref="@MoreVertIcon" slot="end" IconName="more_vert" Collection="material" Size="SizableComponentSize.Large" />
    </IgbNavbar>
</div>

@code {

    public IgbIcon HomeIcon { get; set; }
    public IgbIcon SearchIcon { get; set; }
    public IgbIcon FavoriteIcon { get; set; }
    public IgbIcon MoreVertIcon { get; set; }

    protected override void OnInitialized()
    {
        IgbNavbarModule.Register(IgniteUIBlazor);
        IgbIconModule.Register(IgniteUIBlazor);        
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (this.HomeIcon != null && firstRender)
        {
            this.HomeIcon.EnsureReady().ContinueWith(new Action<Task>((e) =>
            {
                this.HomeIcon.RegisterIconFromText("home",
                    "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0z' fill='none' /><path d='M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z' /></svg>",
                    "material");
            }));
        }

        if (this.SearchIcon != null && firstRender)
        {
            this.SearchIcon.EnsureReady().ContinueWith(new Action<Task>((e) =>
            {
                this.SearchIcon.RegisterIconFromText("search",
                    "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0z' fill='none'/><path d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'/></svg>",
                    "material");
            }));
        }

        if (this.FavoriteIcon != null && firstRender)
        {
            this.FavoriteIcon.EnsureReady().ContinueWith(new Action<Task>((e) =>
            {
                this.FavoriteIcon.RegisterIconFromText("favorite",
                    "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0z' fill='none'/><path d='M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z'/></svg>",
                    "material");
            }));
        }

        if (this.MoreVertIcon != null && firstRender)
        {
            this.MoreVertIcon.EnsureReady().ContinueWith(new Action<Task>((e) =>
            {
                this.MoreVertIcon.RegisterIconFromText("more_vert",
                    "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0z' fill='none'/><path d='M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z'/></svg>",
                    "material");
            }));
        }
    }
}