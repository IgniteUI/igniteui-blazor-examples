@using IgniteUI.Blazor.Controls

<div class="container sample center">
    <IgbMaskInput @ref="MaskInputRef" Change="OnInputChange">
        <IgbIcon @ref="IconRef" IconName="file" Collection="material" slot="prefix"></IgbIcon>
    </IgbMaskInput>

    <div id="content" style="width: 100%; height: inherit;">
        <IgbRadioGroup Alignment="ContentOrientation.Horizontal" style="margin-bottom: 10px;">
            <IgbRadio name="mode" Value="raw" LabelPosition="ToggleLabelPosition.After" Checked="true" @onclick="OnRawClick">raw</IgbRadio>
            <IgbRadio name="mode" Value="withFormatting" LabelPosition="ToggleLabelPosition.After" @onclick="OnFormattingClick">withFormatting</IgbRadio>
        </IgbRadioGroup>
        <span id="value-span">Value: @SpanValue</span>
    </div>
</div>

@code {
    private IgbIcon IconRef { get; set; }
    private IgbMaskInput MaskInputRef { get; set; }
    private string SpanValue { get; set; } = "";

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && IconRef != null)
        {
            await this.IconRef.EnsureReady();
            var fileIcon = "<svg width='32px' height='32px' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'><defs><style>.cls-1{fill:none;stroke:#000;stroke-linecap:round;stroke-linejoin:round;stroke-width:2px;}</style></defs><title/><g id='document'><polyline class='cls-1' points='25 9 25 29 7 29 7 3 16 3'/><line class='cls-1' x1='16' x2='25' y1='3' y2='9'/><line class='cls-1' x1='16' x2='16' y1='3' y2='9'/><line class='cls-1' x1='25' x2='16' y1='9' y2='9'/><line class='cls-1' x1='11' x2='16' y1='17' y2='17'/><line class='cls-1' x1='11' x2='20' y1='21' y2='21'/></g></svg>";
            await this.IconRef.RegisterIconFromTextAsync("file", fileIcon, "material");
        }
    }

    public void OnInputChange()
    {
        this.SpanValue = this.MaskInputRef.Value;
    }

    public void OnRawClick()
    {
        this.MaskInputRef.ValueMode = MaskInputValueMode.Raw;
        this.OnInputChange();
    }

    public void OnFormattingClick()
    {
        this.MaskInputRef.ValueMode = MaskInputValueMode.WithFormatting;
        this.OnInputChange();
    }
}