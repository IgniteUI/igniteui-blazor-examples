@using IgniteUI.Blazor.Controls


<style>
igc-dropdown::part(list) {
    height: 220px;
}

igc-dropdown-item[selected] {
    background: #28a745;
}

igc-dropdown-group::part(label) {
    display: flex;
    justify-content: center;
}
</style>

<div class="container sample center">
    <IgbDropdown>
        <IgbButton slot="target">Countries</IgbButton>
        <IgbDropdownGroup>
            <span slot="label">Europe</span>
            <IgbDropdownItem>
                <IgbIcon @ref=LocationIcon slot="prefix" IconName="drop-icon" Collection="material"></IgbIcon>
              Germany
              <span slot="suffix">DE</span>
            </IgbDropdownItem>
            <IgbDropdownItem>
                <IgbIcon @ref=LocationIcon slot="prefix" IconName="drop-icon" Collection="material"></IgbIcon>
              France
              <span slot="suffix">FR</span>
            </IgbDropdownItem>
            <IgbDropdownItem Selected="true">
                <IgbIcon @ref=LocationIcon slot="prefix" IconName="drop-icon" Collection="material"></IgbIcon>
              Spain
              <span slot="suffix">DE</span>
              </IgbDropdownItem>
        </IgbDropdownGroup>

        <IgbDropdownGroup>
            <span slot="label">North America</span>
            <IgbDropdownItem>
                <IgbIcon @ref=LocationIcon slot="prefix" IconName="drop-icon" Collection="material"></IgbIcon>
              USA
              <span slot="suffix">US</span>
            </IgbDropdownItem>
            <IgbDropdownItem>
                <IgbIcon @ref=LocationIcon slot="prefix" IconName="drop-icon" Collection="material"></IgbIcon>
              Canada
              <span slot="suffix">CA</span>
            </IgbDropdownItem>
            <IgbDropdownItem>
                <IgbIcon @ref=LocationIcon slot="prefix" IconName="drop-icon" Collection="material"></IgbIcon>
              Mexico
              <span slot="suffix">MX</span>
              </IgbDropdownItem>
        </IgbDropdownGroup>

    </IgbDropdown>
</div>

@code {

    private IgbIcon LocationIcon { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && this.LocationIcon != null)
        {
            await this.LocationIcon.EnsureReady();
            //drop-icon
            string dropIcon = "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0z' fill='none'/><path d='M12 12c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6-1.8C18 6.57 15.35 4 12 4s-6 2.57-6 6.2c0 2.34 1.95 5.44 6 9.14 4.05-3.7 6-6.8 6-9.14zM12 2c4.2 0 8 3.22 8 8.2 0 3.32-2.67 7.25-8 11.8-5.33-4.55-8-8.48-8-11.8C4 5.22 7.8 2 12 2z'/></svg>";
            await this.LocationIcon.RegisterIconFromTextAsync("drop-icon", dropIcon, "material");
        }
    }
}
