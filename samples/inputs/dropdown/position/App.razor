@using IgniteUI.Blazor.Controls


<style>
    igc-dropdown::part(list) {
        height: 200px;
    }

    .center {
        align-items: center;
        justify-content: center;
    }
</style>

<div class="container sample center">
    <IgbDropdown @ref="DropDownRef" Distance="5" Change=OnChange Placement=@placement>
        <IgbButton slot="target">Option</IgbButton>
            <IgbDropdownItem Value="Top">@DropdownPlacement.Top</IgbDropdownItem>
            <IgbDropdownItem Value="TopStart">@DropdownPlacement.TopStart</IgbDropdownItem>
            <IgbDropdownItem Value="TopEnd">@DropdownPlacement.TopEnd</IgbDropdownItem>
            <IgbDropdownItem Value="Bottom">@DropdownPlacement.Bottom</IgbDropdownItem>
            <IgbDropdownItem Value="BottomStart">@DropdownPlacement.BottomStart</IgbDropdownItem>
            <IgbDropdownItem Value="BottomEnd">@DropdownPlacement.BottomEnd</IgbDropdownItem>
            <IgbDropdownItem Value="Left">@DropdownPlacement.Left</IgbDropdownItem>
            <IgbDropdownItem Value="LeftStart">@DropdownPlacement.LeftStart</IgbDropdownItem>
            <IgbDropdownItem Value="LeftEnd">@DropdownPlacement.LeftEnd</IgbDropdownItem>
            <IgbDropdownItem Value="Right">@DropdownPlacement.Right</IgbDropdownItem>
            <IgbDropdownItem Value="RightStart">@DropdownPlacement.RightStart</IgbDropdownItem>
            <IgbDropdownItem Value="RightEnd">@DropdownPlacement.RightEnd</IgbDropdownItem>
    </IgbDropdown>
</div>

    @code {

    IgbDropdown DropDownRef { get; set; }
    DropdownPlacement placement { get; set; }

    private void OnChange(IgbDropdownItemComponentEventArgs e)
    {
        Console.WriteLine(e.Detail.Value);

        switch (e.Detail.Value)
        {
            case "Top":
                placement = DropdownPlacement.Top;
                break;
            case "TopStart":
                placement = DropdownPlacement.TopStart;
                break;
            case "TopEnd":
                placement = DropdownPlacement.TopEnd;
                break;
            case "Bottom":
                placement = DropdownPlacement.Bottom;
                break;
            case "BottomStart":
                placement = DropdownPlacement.BottomStart;
                break;
            case "BottomEnd":
                placement = DropdownPlacement.BottomEnd;
                break;
            case "Left":
                placement = DropdownPlacement.Left;
                break;
            case "LeftStart":
                placement = DropdownPlacement.LeftStart;
                break;
            case "LeftEnd":
                placement = DropdownPlacement.LeftEnd;
                break;
            case "Right":
                placement = DropdownPlacement.Right;
                break;
            case "RightStart":
                placement = DropdownPlacement.RightStart;
                break;
            case "RightEnd":
                placement = DropdownPlacement.RightEnd;
                break;
            default:
                Console.WriteLine("Unknown placement value");
                break;
        }
    }
}
