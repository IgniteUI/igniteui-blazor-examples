@using IgniteUI.Blazor.Controls

@inject IJSRuntime JS

<div class="container vertical ig-typography">
    <div class="container vertical fill">
        <IgbTreeGrid
        AutoGenerate="false"
        Name="treeGrid1"
        @ref="treeGrid1"
        Id="treeGrid1"
        Data="RoleplayTreeGridData"
        PrimaryKey="ID"
        ForeignKey="ParentID">
            <IgbColumn
            Field="Name"
            Header="Character Name"
            DataType="GridColumnDataType.String">
            </IgbColumn>

            <IgbColumn
            Field="Race"
            Header="Race"
            DataType="GridColumnDataType.String"
            Editable="true"
            InlineEditorTemplateScript="WebTreeGridCellEditCellTemplate"
            Name="column1"
            @ref="column1">
            </IgbColumn>

            <IgbColumn
            Field="Class"
            Header="Class"
            InlineEditorTemplateScript="WebTreeGridCellEditCellTemplate"
            DataType="GridColumnDataType.String"
            Editable="true"
            Name="column2"
            @ref="column2">
            </IgbColumn>

            <IgbColumn
            Field="Age"
            Header="Age"
            DataType="GridColumnDataType.String"
            Editable="true">
            </IgbColumn>

            <IgbColumn
            Field="Alignment"
            Header="Alignment"
            InlineEditorTemplateScript="WebTreeGridCellEditCellTemplate"
            DataType="GridColumnDataType.String"
            Editable="true"
            Name="column3"
            @ref="column3">
            </IgbColumn>

        </IgbTreeGrid>

    </div>
</div>

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var treeGrid1 = this.treeGrid1;
        var column1 = this.column1;
        var column2 = this.column2;
        var column3 = this.column3;

    }

    private IgbTreeGrid treeGrid1;
    private IgbColumn column1;
    private IgbColumn column2;
    private IgbColumn column3;

    private RoleplayTreeGridData _roleplayTreeGridData = null;
    public RoleplayTreeGridData RoleplayTreeGridData
    {
        get
        {
            if (_roleplayTreeGridData == null)
            {
                _roleplayTreeGridData = new RoleplayTreeGridData();
            }
            return _roleplayTreeGridData;
        }
    }

}