@using IgniteUI.Blazor.Controls;

@inject IIgniteUIBlazor IgniteUIBlazor
@inject IJSRuntime JS

<div class="container vertical">

    <div class="container vertical fill">
        <IgbTreeGrid
        AutoGenerate="false"
        ForeignKey="ParentID"
        Id="treeGrid"
        Data="EmployeesFlatData"
        Moving="true"
        PrimaryKey="ID"
        AllowAdvancedFiltering="true"
        Name="treeGrid"
        @ref="treeGrid">
            <IgbGridToolbar
            >
                <IgbGridToolbarActions
                >
                    <IgbGridToolbarAdvancedFiltering
                    >
                    </IgbGridToolbarAdvancedFiltering>
                    
                </IgbGridToolbarActions>
                
            </IgbGridToolbar>
            
            <IgbColumn
            Field="Name"
            Sortable="true"
            DataType="GridColumnDataType.String">
            </IgbColumn>
            
            <IgbColumn
            Field="Title"
            DataType="GridColumnDataType.String"
            Sortable="true">
            </IgbColumn>
            
            <IgbColumn
            Field="Age"
            DataType="GridColumnDataType.Number"
            Sortable="true">
            </IgbColumn>
            
            <IgbColumn
            Field="HireDate"
            DataType="GridColumnDataType.Date"
            Sortable="true">
            </IgbColumn>
            
            <IgbColumn
            Field="OnPTO"
            DataType="GridColumnDataType.Boolean"
            Sortable="true">
            </IgbColumn>
            
        </IgbTreeGrid>
        
    </div>

</div>

@code {
    protected override async Task OnInitializedAsync()
    {

        await Task.Delay(1);
    }

    private Action BindElements { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var treeGrid = this.treeGrid;

        this.BindElements = () => {
        };
        this.BindElements();

        if (firstRender) {
        }

        await Task.Delay(1);
	}

    private IgbTreeGrid treeGrid;

    private EmployeesFlatData _employeesFlatData = null;
    public EmployeesFlatData EmployeesFlatData
    {
        get
        {
            if (_employeesFlatData == null)
            {
                _employeesFlatData = new EmployeesFlatData(); 
            }
            return _employeesFlatData;
        }
    }
    
}