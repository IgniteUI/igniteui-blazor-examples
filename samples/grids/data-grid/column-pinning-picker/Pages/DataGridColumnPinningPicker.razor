@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor;

<div class="igContainer">

    <div class="igOptions">
        <button class="igOptions-item" disabled=@IsPinningToLeftDisabled  @onclick="OnPinLeft">Pin Left</button>
        <button class="igOptions-item" disabled=@IsPinningToRightDisabled @onclick="OnPinRight" >Pin Right</button>
        <button class="igOptions-item" @onclick="OnUnPin" >Unpin Columns</button>
    </div>

    <div class="igComponent">

        @if (DataSource != null)
        {
        <DataGrid Height="100%" Width="100%"
                  DefaultColumnMinWidth="120"
                  DataSource="@DataSource"
                  AutoGenerateColumns="false"
                  @ref="DataGridRef">
            <TextColumn Field="ID" Pinned="PinnedPositions.Left" Width="110" />
            <TextColumn Field="FirstName" Pinned="PinnedPositions.Left" Width="190" />
            <TextColumn Field="LastName" Pinned="PinnedPositions.Left" Width="190" />
            <DateTimeColumn Field="Birthday" Width="170" />
            <NumericColumn Field="Age" Width="120" />
            <ImageColumn Field="CountryFlag" />
            <TextColumn Field="Street" Width="160" />
            <TextColumn Field="City" Width="260" />
            <TextColumn Field="Country" Width="170" />
            <NumericColumn Field="Salary" Width="170" />
            <NumericColumn Field="Sales" Width="120" />
            <NumericColumn Field="Salary" Width="120" PositivePrefix="$"
                           ShowGroupingSeparator="true"
                           MaxFractionDigits="0"
                           MinFractionDigits="0" />
        </DataGrid>
        }

    </div>
</div>

@code {

    private List<Employee> DataSource;
    public DataGrid grid;
    public DataGrid DataGridRef
    {
        get
        {
            return grid;
        }
        set
        {
            grid = value;
            StateHasChanged();
        }
    }
    public Boolean IsPinningToLeftDisabled { get; set; } = false;
    public Boolean IsPinningToRightDisabled { get; set; } = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        DataGridModule.Register(IgniteUIBlazor);

        this.DataSource = EmployeeData.Create(200, false);

    }

    private async Task OnPinLeft()
    {
        IsPinningToLeftDisabled = true;
        IsPinningToRightDisabled = true;

        var idColumn = this.grid.ActualColumns[0];
        var firstNameColumn = this.grid.ActualColumns[1];
        var lastNameColumn = this.grid.ActualColumns[2];
        await this.grid.PinColumnAsync(idColumn, PinnedPositions.Left);
        await this.grid.PinColumnAsync(firstNameColumn, PinnedPositions.Left);
        await this.grid.PinColumnAsync(lastNameColumn, PinnedPositions.Left);
    }

    private async Task OnPinRight()
    {
        IsPinningToLeftDisabled = true;
        IsPinningToRightDisabled = true;

        var streetColumn = this.grid.ActualColumns[6];
        var cityColumn = this.grid.ActualColumns[7];
        var countryColumn = this.grid.ActualColumns[8];
        await this.grid.PinColumnAsync(streetColumn, PinnedPositions.Right);
        await this.grid.PinColumnAsync(cityColumn, PinnedPositions.Right);
        await this.grid.PinColumnAsync(countryColumn, PinnedPositions.Right);
    }

    private async Task OnUnPin()
    {
        IsPinningToLeftDisabled = false;
        IsPinningToRightDisabled = false;

        var idColumn = this.grid.ActualColumns[0];
        var firstNameColumn = this.grid.ActualColumns[1];
        var lastNameColumn = this.grid.ActualColumns[2];
        await this.grid.PinColumnAsync(idColumn, PinnedPositions.None);
        await this.grid.PinColumnAsync(firstNameColumn, PinnedPositions.None);
        await this.grid.PinColumnAsync(lastNameColumn, PinnedPositions.None);

        var streetColumn = this.grid.ActualColumns[6];
        var cityColumn = this.grid.ActualColumns[7];
        var countryColumn = this.grid.ActualColumns[8];
        await this.grid.PinColumnAsync(streetColumn, PinnedPositions.None);
        await this.grid.PinColumnAsync(cityColumn, PinnedPositions.None);
        await this.grid.PinColumnAsync(countryColumn, PinnedPositions.None);
    }

}
