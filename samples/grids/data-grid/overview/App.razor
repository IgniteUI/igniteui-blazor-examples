@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Rendering
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.RenderTree
@using Microsoft.AspNetCore.Components.Web

@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="igContainer">

    <div class="igComponent">

        @if (Employees != null)
        {
            <DataGridToolbar ToolbarTitle="Sales Team" ColumnChooser="true" ColumnPinning="true" TargetGrid="@DataGridRef"/>

            <DataGrid Height="calc(100% - 2.75rem)" Width="100%" RowHeight="50" @ref="@DataGridRef"
                      DataSource="Employees"
                      AutoGenerateColumns="false"
                      IsColumnOptionsEnabled="true"
                      IsGroupCollapsable="true"
                      ActivationMode="GridActivationMode.Cell"
                      SummaryScope="@DataSourceSummaryScope.Root"
                      GroupSummaryDisplayMode="@GroupSummaryDisplayMode.RowBottom"
                      GroupHeaderDisplayMode="@DataSourceSectionHeaderDisplayMode.Combined"
                      CornerRadiusTopLeft="0"
                      CornerRadiusTopRight="0"
                      ColumnMovingSeparatorWidth="2"
                      ColumnMovingMode="ColumnMovingMode.Deferred"
                      ColumnMovingAnimationMode="ColumnMovingAnimationMode.SlideOver"
                      ColumnShowingAnimationMode="ColumnShowingAnimationMode.SlideFromRightAndFadeIn"
                      ColumnHidingAnimationMode="ColumnHidingAnimationMode.SlideToRightAndFadeOut"
                      SelectionMode="GridSelectionMode.SingleRow">

                <ImageColumn IsEditable="false" Width="@("*>120")" Field="Photo" PaddingTop="5" PaddingBottom="5" PaddingRight="10"
                             HorizontalAlignment="@CellContentHorizontalAlignment.Stretch"  />

                <TextColumn Width="@("*>130")" Field="Name" />

                @*NOTE: CellUpdatingScript is implemented in wwwroot/*.js file *@
                <TemplateColumn Width="@("*>160")" Field="Sales" CellUpdatingScript="onUpdatingSalesColumn"
                                HorizontalAlignment="@CellContentHorizontalAlignment.Center" />

                <NumericColumn Width="@("*>130")" Field="Salary" PositivePrefix="$"
                               ShowGroupingSeparator="true"
                               MaxFractionDigits="0"
                               MinFractionDigits="0" />

                <NumericColumn Width="100" Field="Age" HorizontalAlignment="@CellContentHorizontalAlignment.Center"/>
                <DateTimeColumn Width="@("*>140")" Field="Birthday" HeaderText="Date of Birth" />

                <ImageColumn IsEditable="false" Width="@("*>110")" Field="CountryFlag" HeaderText="Country" PaddingTop="5" PaddingBottom="5" PaddingRight="10"
                             HorizontalAlignment="@CellContentHorizontalAlignment.Stretch" />

                @*NOTE: CellUpdatingScript is implemented in wwwroot/*.js file *@
                <TemplateColumn Width="@("*>170")" Field="Address" CellUpdatingScript="onUpdatingAddressColumn" />
                <TemplateColumn Width="@("*>130")" Field="Phone" CellUpdatingScript="onUpdatingPhoneColumn" />

                <TextColumn Width="@("*>120")" Field="Income" />
                <TextColumn Width="@("*>120")" Field="Email" IsEditable="false" />

            </DataGrid>
        }


    </div>
</div>

@code {

    private List<Employee> Employees;

    private DataGrid _grid;
    private DataGrid DataGridRef
    {
        get { return _grid; }
        set { _grid = value; this.OnDataGridRef(); StateHasChanged(); }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        DataGridModule.Register(IgniteUIBlazor);
        DataGridToolbarModule.Register(IgniteUIBlazor);
        ColumnChooserModule.Register(IgniteUIBlazor);

        this.Employees = EmployeeData.Create(100, false);

        Console.WriteLine("Data " + this.Employees.Count);
    }

    private void OnDataGridRef()
    {
        var peopleGroup = new ColumnGroupDescription() { Field = "Country", DisplayName = "Country" };
        var incomeGroup = new ColumnGroupDescription() { Field = "Income", DisplayName = "Income" };
        this._grid.GroupDescriptions.Add(peopleGroup);
        this._grid.GroupDescriptions.Add(incomeGroup);

        var ageSummary = new ColumnSummaryDescription() { Field = "Age", Operand = SummaryOperand.Average };
        var peopleSummary = new ColumnSummaryDescription() { Field = "Photo", Operand = SummaryOperand.Count };
        var salarySummary = new ColumnSummaryDescription() { Field = "Salary", Operand = SummaryOperand.Sum };
        var saleSummary = new ColumnSummaryDescription() { Field = "Sales", Operand = SummaryOperand.Max };

        this._grid.SummaryDescriptions.Add(ageSummary);
        this._grid.SummaryDescriptions.Add(peopleSummary);
        this._grid.SummaryDescriptions.Add(salarySummary);
        this._grid.SummaryDescriptions.Add(saleSummary);

        // TODO fix onSummarziePeopleGender
        //var nameSummary = new ColumnSummaryDescription() { Field = "Name", Operand = SummaryOperand.Custom,
        //    ProvideCalculatorScript = "onSummarziePeopleGender" };
        //this._grid.SummaryDescriptions.Add(nameSummary);
    }

}