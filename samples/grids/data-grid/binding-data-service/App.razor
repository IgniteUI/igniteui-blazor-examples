@using IgniteUI.Blazor.Controls
;

<div class="container vertical">

    <div class="container vertical">

        @if (Data != null)
        {
        <div style="overflow: hidden">
            <IgbDataGrid Height="100%" Width="100%"
                DataSource="Data"
                AutoGenerateColumns="false"
                ActivationMode="GridActivationMode.Cell">

                <IgbTextColumn Width="@("*>140")" Field="Category" />
                <IgbTextColumn Width="@("*>160")" Field="Type" />
                <IgbTextColumn Width="@("*>140")" Field="Contract" />
                <IgbTextColumn Width="@("*>150")" Field="Settlement" />
                <IgbTextColumn Width="@("*>150")" Field="Region" />
                <IgbTextColumn Width="@("*>160")" Field="Country" />

                <IgbNumericColumn Width="@("*>140")" Field="Open" HeaderText="Open" ShowGroupingSeparator="true" PositivePrefix="$" MinFractionDigits="2" MaxFractionDigits="2" />
                <IgbNumericColumn Width="@("*>140")" Field="Price" HeaderText="Close" ShowGroupingSeparator="true" PositivePrefix="$" MinFractionDigits="2" MaxFractionDigits="2" />
                <IgbNumericColumn Width="@("*>130")" Field="Change" MinFractionDigits="2" MaxFractionDigits="2" />
                <IgbNumericColumn Width="@("*>150")" Field="ChangePercent" NegativeSuffix="%" PositiveSuffix="%" MinFractionDigits="2" MaxFractionDigits="2" />
                <IgbNumericColumn Width="@("*>110")" Field="Buy" ShowGroupingSeparator="true" PositivePrefix="$" MinFractionDigits="2" MaxFractionDigits="2" />
                <IgbNumericColumn Width="@("*>110")" Field="Sell" ShowGroupingSeparator="true" PositivePrefix="$" MinFractionDigits="2" MaxFractionDigits="2" />
                <IgbNumericColumn Width="@("*>130")" Field="Spread" ShowGroupingSeparator="true" MinFractionDigits="2" MaxFractionDigits="2" />
                <IgbNumericColumn Width="@("*>130")" Field="Volume" ShowGroupingSeparator="true" MinFractionDigits="0" MaxFractionDigits="0" />
                <IgbNumericColumn Width="@("*>130")" Field="DailyHigh" ShowGroupingSeparator="true" MinFractionDigits="2" MaxFractionDigits="2" PositivePrefix="$" />
                <IgbNumericColumn Width="@("*>130")" Field="DailyLow" ShowGroupingSeparator="true" MinFractionDigits="2" MaxFractionDigits="2" PositivePrefix="$" />
                <IgbNumericColumn Width="@("*>130")" Field="YearlyHigh" ShowGroupingSeparator="true" MinFractionDigits="2" MaxFractionDigits="2" PositivePrefix="$" />
                <IgbNumericColumn Width="@("*>130")" Field="YearlyLow" ShowGroupingSeparator="true" MinFractionDigits="2" MaxFractionDigits="2" PositivePrefix="$" />
                <IgbNumericColumn Width="@("*>130")" Field="YearlyStart" ShowGroupingSeparator="true" MinFractionDigits="2" MaxFractionDigits="2" PositivePrefix="$" />

                <IgbDateTimeColumn Width="@("*>140")" Field="Maturity" HorizontalAlignment="@CellContentHorizontalAlignment.Right" />
                <IgbTextColumn Width="@("*>120")" Field="Currency" />
                <IgbTextColumn Width="@("*>110")" Field="Risk" />
                <IgbTextColumn Width="@("*>130")" Field="Sector" />
                <IgbTextColumn Width="@("*>130")" Field="Security" />
                <IgbTextColumn Width="@("*>170")" Field="Issuer" />

            </IgbDataGrid>
        </div>
        }


    </div>
</div>

@code {

    private List<PortfolioInfo> Data;

    protected override void OnInitialized()
    {
        this.Data = PortfolioData.Create(100);
    }

}
