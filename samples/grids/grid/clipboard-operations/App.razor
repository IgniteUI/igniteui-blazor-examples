@using IgniteUI.Blazor.Controls

@inject IJSRuntime JS

<div class="container vertical">
    <div class="options vertical">
        <IgbPropertyEditorPanel
        
        DescriptionType="WebGrid"
        IsHorizontal="true"
        IsWrappingEnabled="true"
        Name="PropertyEditor"
        @ref="propertyEditor">
            <IgbPropertyEditorPropertyDescription
            PropertyPath="ClipboardOptions.Separator"
            Label="Change Copy Separator"
            ValueType="PropertyEditorValueType.StringValue">
            </IgbPropertyEditorPropertyDescription>
            
            <IgbPropertyEditorPropertyDescription
            ValueType="PropertyEditorValueType.Boolean1"
            Label="Grid Copy Behavior"
            PropertyPath="ClipboardOptions.Enabled"
            PrimitiveValue="true"
            Name="ClipboardEnabledEditor"
            @ref="clipboardEnabledEditor">
            </IgbPropertyEditorPropertyDescription>
            
            <IgbPropertyEditorPropertyDescription
            ValueType="PropertyEditorValueType.Boolean1"
            Label="Copying of Header Labels"
            PropertyPath="ClipboardOptions.CopyHeaders"
            PrimitiveValue="true"
            Name="ClipboardHeadersEditor"
            @ref="clipboardHeadersEditor">
            </IgbPropertyEditorPropertyDescription>
            
            <IgbPropertyEditorPropertyDescription
            ValueType="PropertyEditorValueType.Boolean1"
            Label="Copying Column Formatters"
            PropertyPath="ClipboardOptions.CopyFormatters"
            PrimitiveValue="true"
            Name="ClipboardFormattersEditor"
            @ref="clipboardFormattersEditor">
            </IgbPropertyEditorPropertyDescription>
            
            <IgbPropertyEditorPropertyDescription
            ValueType="PropertyEditorValueType.Button"
            PrimitiveValue="@("Clear Selection")"
            ButtonClickedScript="WebGridClearSelection"
            Name="propertyEditorPropertyDescription1"
            @ref="propertyEditorPropertyDescription1">
            </IgbPropertyEditorPropertyDescription>
            
        </IgbPropertyEditorPanel>
        
    </div>

    <div class="container vertical fill">
        <IgbGrid
        AutoGenerate="false"
        Data="NwindData"
        RowEditable="true"
        ColumnInitScript="WebGridClipboardOperationsColumnInit"
        Name="grid"
        @ref="grid">
            <IgbColumn
            Field="ProductID"
            Header="Product ID">
            </IgbColumn>
            
            <IgbColumn
            Field="ProductName"
            Header="Product Name">
            </IgbColumn>
            
            <IgbColumn
            Field="SupplierID"
            Header="Supplier ID">
            </IgbColumn>
            
            <IgbColumn
            Field="CategoryID"
            Header="Category ID">
            </IgbColumn>
            
            <IgbColumn
            Field="QuantityPerUnit"
            Header="Quantity Per Unit">
            </IgbColumn>
            
            <IgbColumn
            Field="UnitPrice"
            Header="Unit Price">
            </IgbColumn>
            
            <IgbColumn
            Field="UnitsInStock"
            Header="Units In Stock">
            </IgbColumn>
            
        </IgbGrid>
        
    </div>
</div>

@code {

    private Action BindElements { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var propertyEditor = this.propertyEditor;
        var clipboardEnabledEditor = this.clipboardEnabledEditor;
        var clipboardHeadersEditor = this.clipboardHeadersEditor;
        var clipboardFormattersEditor = this.clipboardFormattersEditor;
        var propertyEditorPropertyDescription1 = this.propertyEditorPropertyDescription1;
        var grid = this.grid;

        this.BindElements = () => {
            propertyEditor.Target = this.grid;
        };
        this.BindElements();

    }

    private IgbPropertyEditorPanel propertyEditor;
    private IgbPropertyEditorPropertyDescription clipboardEnabledEditor;
    private IgbPropertyEditorPropertyDescription clipboardHeadersEditor;
    private IgbPropertyEditorPropertyDescription clipboardFormattersEditor;
    private IgbPropertyEditorPropertyDescription propertyEditorPropertyDescription1;
    private IgbGrid grid;

    private NwindData _nwindData = null;
    public NwindData NwindData
    {
        get
        {
            if (_nwindData == null)
            {
                _nwindData = new NwindData(); 
            }
            return _nwindData;
        }
    }
    
}