@using IgniteUI.Blazor.Controls


<div class="container vertical">
    <div class="options vertical">
        <IgbPropertyEditorPanel
        
        DescriptionType="WebGrid"
        IsHorizontal="true"
        IsWrappingEnabled="true"
        Name="PropertyEditor"
        @ref="propertyEditor">
            <IgbPropertyEditorPropertyDescription
            ValueType="PropertyEditorValueType.Button"
            PrimitiveValue="@("Toggle First Group Pinned")"
            ButtonClicked="WebGridPinFirstGroupToggle"
            Name="propertyEditorPropertyDescription1"
            @ref="propertyEditorPropertyDescription1">
            </IgbPropertyEditorPropertyDescription>
            
            <IgbPropertyEditorPropertyDescription
            ValueType="PropertyEditorValueType.Button"
            PrimitiveValue="@("Toggle First Group Hidden")"
            ButtonClicked="WebGridHideFirstGroupToggle"
            Name="propertyEditorPropertyDescription2"
            @ref="propertyEditorPropertyDescription2">
            </IgbPropertyEditorPropertyDescription>
            
        </IgbPropertyEditorPanel>
        
    </div>

    <div class="container vertical fill">
        <IgbGrid
        AutoGenerate="false"
        Id="grid"
        Data="CustomersData"
        Name="grid"
        @ref="grid">
            <IgbColumn
            Field="ID"
            Resizable="true">
            </IgbColumn>
            
            <IgbColumnGroup
            Header="General Information">
                <IgbColumn
                Field="CompanyName"
                Resizable="true"
                Sortable="true">
                </IgbColumn>
                
                <IgbColumnGroup
                Header="Personal Details">
                    <IgbColumn
                    Field="ContactName"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                    <IgbColumn
                    Field="ContactTitle"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                </IgbColumnGroup>
                
            </IgbColumnGroup>
            
            <IgbColumnGroup
            Header="Address Information">
                <IgbColumnGroup
                Header="Location">
                    <IgbColumn
                    Field="Country"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                    <IgbColumn
                    Field="Region"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                    <IgbColumn
                    Field="City"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                    <IgbColumn
                    Field="Address"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                </IgbColumnGroup>
                
                <IgbColumnGroup
                Header="Contact Information">
                    <IgbColumn
                    Field="Phone"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                    <IgbColumn
                    Field="Fax"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                    <IgbColumn
                    Field="PostalCode"
                    Resizable="true"
                    Sortable="true">
                    </IgbColumn>
                    
                </IgbColumnGroup>
                
            </IgbColumnGroup>
            
        </IgbGrid>
        
    </div>
</div>

@code {

    private Action BindElements { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var propertyEditor = this.propertyEditor;
        var propertyEditorPropertyDescription1 = this.propertyEditorPropertyDescription1;
        var propertyEditorPropertyDescription2 = this.propertyEditorPropertyDescription2;
        var grid = this.grid;

        this.BindElements = () => {
            propertyEditor.Target = this.grid;
        };
        this.BindElements();

    }

    private IgbPropertyEditorPanel propertyEditor;
    private IgbPropertyEditorPropertyDescription propertyEditorPropertyDescription1;
    private IgbPropertyEditorPropertyDescription propertyEditorPropertyDescription2;
    private IgbGrid grid;

    
    public void WebGridPinFirstGroupToggle(IgbPropertyEditorPropertyDescriptionButtonClickEventArgs args)
    {
        var columnGroup = this.grid.ActualColumns[1];
        columnGroup.Pinned = !columnGroup.Pinned;
    }
        
    
    public void WebGridHideFirstGroupToggle(IgbPropertyEditorPropertyDescriptionButtonClickEventArgs args)
    {
        var columnGroup = this.grid.ActualColumns[1];
        columnGroup.Hidden = !columnGroup.Hidden;
    }
        
    private CustomersData _customersData = null;
    public CustomersData CustomersData
    {
        get
        {
            if (_customersData == null)
            {
                _customersData = new CustomersData(); 
            }
            return _customersData;
        }
    }
    
}