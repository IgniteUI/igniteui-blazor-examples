@using IgniteUI.Blazor.Controls
@inject IJSRuntime JS

<div class="container vertical">
    <div class="controls-holder">
        <div class="switches">
            <div class="switch-control-item">
                <IgbSwitch Checked=true CheckedChanged="ToggleGroups">Grouped</IgbSwitch>

            </div>
            <div class="switch-control-item">
                <IgbSwitch Checked=true CheckedChanged="ToggleToolbar">Toolbar</IgbSwitch>
            </div>
            <div class="control-item">
                <label>Records: @RecordsCount</label>
                <IgbSlider Class="finjs-slider" Value="@RecordsCount" Min="0" Max="10000" Step="100"></IgbSlider>
            </div>
            <div class="control-item">
                <label>Frequency: @Frequency</label>
                <IgbSlider Class="finjs-slider" Value="@Frequency" Min="100" Max="3000" Step="10"></IgbSlider>
            </div>
        </div>
        <div class="control-item finjs-play-controls">
            <IgbButton Variant="ButtonVariant.Outlined">
                <IgbIcon @ref="icon" IconName="update" Collection="material"></IgbIcon>LIVE ALL PRICES
            </IgbButton>
            <IgbButton Variant="ButtonVariant.Outlined" Disabled=true>
                <IgbIcon IconName="stop" Collection="material"></IgbIcon>Stop
            </IgbButton>
            <IgbButton Variant="ButtonVariant.Outlined">
                <IgbIcon IconName="insert_chart" Collection="material"></IgbIcon>Chart
            </IgbButton>
        </div>
    </div>
    <div class="container vertical fill">

        <IgbGrid AutoGenerate="false"
                 Data="FinancialData"
                 PrimaryKey="id"
                 DisplayDensity="DisplayDensity.Compact"
                 AllowFiltering="true"
                 FilterMode="FilterMode.ExcelStyleFilter"
                 Name="grid1"
                 Id="grid1"
                 @ref="grid1">
                    <IgbGridToolbar>
                        <IgbGridToolbarActions>
                            <IgbGridToolbarHiding></IgbGridToolbarHiding>
                            <IgbGridToolbarPinning></IgbGridToolbarPinning>
                            <IgbGridToolbarExporter></IgbGridToolbarExporter>
                        </IgbGridToolbarActions>
                    </IgbGridToolbar>
          
            <IgbColumn Field="id"
                       Header="id"
                       DataType="GridColumnDataType.Number"
                       Sortable="true"
                       Editable="true"
                       Resizable="true">
            </IgbColumn>

            <IgbColumn Field="category"
                       Header="Category"
                       Width="120px"
                       DataType="GridColumnDataType.String"
                       Sortable="true"
                       Editable="true"
                       Resizable="true">
            </IgbColumn>

            <IgbColumn Field="type"
                       Header="Type"
                       Width="100px"
                       DataType="GridColumnDataType.String"
                       Sortable="true"
                       Editable="true"
                       Resizable="true">
            </IgbColumn>

            <IgbColumn Field="contract"
                       Header="Contract"
                       Width="110px"
                       DataType="GridColumnDataType.String"
                       Sortable="true"
                       Groupable="true"
                       Editable="true">
            </IgbColumn>

            <IgbColumn Field="settlement"
                       Width="100px"
                       Header="Settlement"
                       DataType="GridColumnDataType.String"
                       Sortable="true"
                       Editable="true"
                       Resizable="true">
            </IgbColumn>

            <IgbColumn Field="country"
                       Width="100px"
                       Header="Country"
                       DataType="GridColumnDataType.String"
                       Sortable="true"
                       Editable="true">
            </IgbColumn>

            <IgbColumn Field="region"
                       Width="100px"
                       Header="Region"
                       DataType="GridColumnDataType.String"
                       Sortable="true"
                       Editable="true">
            </IgbColumn>

            <IgbColumn Field="lastUpdated"
                       Width="120px"
                       Header="Last Updated"
                       DataType="GridColumnDataType.Date"
                       Sortable="true"
                       Filterable="true"
                       Editable="true">
            </IgbColumn>

            <IgbColumn Field="openPrice"
                       Width="120px"
                       Header="Open Price"
                       DataType="GridColumnDataType.Currency"
                       Sortable="true"
                       Filterable="true"
                       Editable="true">
            </IgbColumn>

            <IgbColumn Field="price"
                       Width="120px"
                       Header="Price"
                       BodyTemplateScript="PriceTemplate"
                       CellClassesScript="trends"
                       DataType="GridColumnDataType.Currency"
                       Sortable="true"
                       Filterable="true"
                       Editable="true">
            </IgbColumn>


            <IgbColumn Field="Chart"
                       BodyTemplate="ChartButtonTemplate"
                       Width="60px"
                       Header="Chart">
            </IgbColumn>

            <IgbColumn Field="change"
                       Width="120px"
                       Header="Change"
                       CellClassesScript="trendsChange"
                       DataType="GridColumnDataType.Number"
                       Sortable="true"
                       Filterable="true"
                       Editable="true">
            </IgbColumn>

            <IgbColumn Field="changeP"
                       CellClassesScript="trendsChange"
                       Width="120px"
                       Header="Change P"
                       DataType="GridColumnDataType.Percent"
                       Sortable="true"
                       Filterable="true"
                       Editable="true">
            </IgbColumn>

            <IgbColumn Field="buy"
                       Width="110px"
                       Header="Buy"
                       DataType="GridColumnDataType.Currency"
                       Sortable="true"
                       Filterable="true">
            </IgbColumn>

            <IgbColumn Field="sell"
                       Width="110px"
                       Header="Sell"
                       DataType="GridColumnDataType.Currency"
                       Sortable="true"
                       Filterable="true">
            </IgbColumn>

            <IgbColumn Field="spread"
                       Width="110px"
                       Header="Spread"
                       DataType="GridColumnDataType.Number"
                       Sortable="true"
                       Filterable="true">
            </IgbColumn>

            <IgbColumn Field="volume"
                       Width="110px"
                       Header="Volume"
                       DataType="GridColumnDataType.Number"
                       Sortable="true"
                       Filterable="true">
            </IgbColumn>

            <IgbColumn Field="highD"
                       Width="110px"
                       DataType="GridColumnDataType.Currency"
                       Sortable="true"
                       Filterable="true">
            </IgbColumn>
            <IgbColumn Field="lowD"
                       Width="110px"
                       DataType="GridColumnDataType.Currency"
                       Sortable="true"
                       Filterable="true">
            </IgbColumn>
            <IgbColumn Field="highY"
                       Width="110px"
                       DataType="GridColumnDataType.Currency"
                       Sortable="true"
                       Filterable="true">
            </IgbColumn>
            <IgbColumn Field="lowY"
                       Width="110px"
                       DataType="GridColumnDataType.Currency"
                       Sortable="true"
                       Filterable="true">
            </IgbColumn>
            <IgbColumn Field="indGrou"
                       Width="110px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="indSect"
                       Width="100px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="indSubg"
                       Width="100px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="secType"
                       Width="90px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="issuerN"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="moodys"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="fitch"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="dbrs"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="collatT"
                       Width="90px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="curncy"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="security"
                       Width="120px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="sector"
                       Width="80px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="cusip"
                       Width="100px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="ticker"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="cpn"
                       Width="80px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="maturity"
                       Width="120px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="krD_3YR"
                       Width="110px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="zV_SPREAD"
                       Width="90px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="kRD_5YR"
                       Width="50px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="kRD_1YR"
                       Width="80px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="indGrou"
                       Width="110px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="indSect"
                       Width="100px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="indSubg"
                       Width="100px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="secType"
                       Width="90px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="issuerN"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="moodys"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="fitch"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="dbrs"
                       Width="60px"
                       Filterable="false">
            </IgbColumn>
            <IgbColumn Field="collatT"
                       Width="90px"
                       Filterable="false">
            </IgbColumn>
        </IgbGrid>

    </div>
</div>

@code {

    public IgbGroupingExpression[] GroupingExpressions = new IgbGroupingExpression[3]
        {
        new IgbGroupingExpression(){ FieldName = "category", Dir= SortingDirection.Desc },
        new IgbGroupingExpression() { FieldName = "type", Dir= SortingDirection.Desc  },
        new IgbGroupingExpression() { FieldName = "contract", Dir= SortingDirection.Desc, IgnoreCase = false  }
    };
    private string trendUp = @"<svg xmlns=""http://www.w3.org/2000/svg"" height=""48"" viewBox=""0 -960 960 960"" width=""48""><path d=""m123-240-43-43 292-291 167 167 241-241H653v-60h227v227h-59v-123L538-321 371-488 123-240Z""/></svg>";
    private string trendDown = @"<svg xmlns =""http://www.w3.org/2000/svg"" height=""48"" viewBox=""0 -960 960 960"" width=""48""><path d=""M653-240v-60h127L539-541 372-374 80-665l43-43 248 248 167-167 283 283v-123h59v227H653Z""/></svg>";
    private string chartIcon = @"<svg xmlns=""http://www.w3.org/2000/svg"" height=""48"" viewBox=""0 -960 960 960"" width=""48""><path d=""M284-277h60v-275h-60v275Zm166 0h60v-406h-60v406Zm166 0h60v-148h-60v148ZM180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm0-600v600-600Z""/></svg>";
    private string stopIcon = @"<svg xmlns=""http://www.w3.org/2000/svg"" height=""48"" viewBox=""0 -960 960 960"" width=""48""><path d=""M300-660v360-360Zm-60 420v-480h480v480H240Zm60-60h360v-360H300v360Z""/></svg >";
    private string updateIcon =@"<svg xmlns=""http://www.w3.org/2000/svg"" height=""48"" viewBox=""0 -960 960 960"" width=""48""><path d=""M483-120q-75 0-141-28.5T226.5-226q-49.5-49-78-115T120-482q0-75 28.5-140t78-113.5Q276-784 342-812t141-28q80 0 151.5 35T758-709v-106h60v208H609v-60h105q-44-51-103.5-82T483-780q-125 0-214 85.5T180-485q0 127 88 216t215 89q125 0 211-88t86-213h60q0 150-104 255.5T483-120Zm122-197L451-469v-214h60v189l137 134-43 43Z""/></svg>";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var grid1 = this.grid1;
        var icon = this.icon;
        if (icon != null && firstRender)
        {
            await icon.EnsureReady();
            await icon.RegisterIconFromTextAsync("trending_up", this.trendUp, "material");
            await icon.RegisterIconFromTextAsync("trending_down", this.trendDown, "material");
            await icon.RegisterIconFromTextAsync("insert_chart", this.chartIcon, "material");
            await icon.RegisterIconFromTextAsync("stop", this.stopIcon, "material");
            await icon.RegisterIconFromTextAsync("update", this.updateIcon, "material");
        }

        if (grid1 != null && firstRender)
        {
            grid1.GroupingExpressions = this.GroupingExpressions;
        }

    }

    public RenderFragment<IgbCellTemplateContext> ChartButtonTemplate = (context) =>
    {
        return 
    @<IgbButton Variant="ButtonVariant.Contained" Size="SizableComponentSize.Small">
                <IgbIcon IconName="insert_chart" Collection="material" ></IgbIcon>
        </IgbButton>
    ;
    };
    public bool Grouped;
    private IgbGrid grid1;
    private IgbIcon icon;
    public int RecordsCount = 1000;
    public int Frequency = 500;


    public async void ToggleToolbar(bool isChecked)
    {
        await JS.InvokeAsync<string>("ToobarToggle");
    }

    public async void ToggleGroups(bool isChecked)
    {
        if (isChecked)
        {
            this.grid1.GroupingExpressions = this.GroupingExpressions;
        }
        else
        {
            this.grid1.GroupingExpressions = new IgbGroupingExpression[0];
        }

    }


    private List<Stock> _data = null;
    public List<Stock> FinancialData
    {
        get
        {
            if (_data == null)
            {
                _data = new FinancialData().GenerateData(RecordsCount);
            }
            return _data;
        }
    }

}