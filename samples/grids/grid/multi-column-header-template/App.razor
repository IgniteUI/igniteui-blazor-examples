@using IgniteUI.Blazor.Controls

@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">



    <div class="container vertical fill">
        <IgbIcon @ref="IconRef" Size="SizableComponentSize.Small" IconName="expand_more" Collection="material" hidden="hidden" />
        <IgbGrid AutoGenerate="false"
                 Id="grid"
                 Data="CustomersData"
                 Name="grid"
                 @ref="grid">
            <IgbColumn Field="ID">
            </IgbColumn>
            <IgbColumnGroup Header="General Information" HeaderTemplateScript="HeaderTemplate">
                <IgbColumn Field="CompanyName"
                           Resizable="true"
                           Sortable="true">
                </IgbColumn>
                <IgbColumnGroup Header="Personal Details">
                    <IgbColumn Field="ContactName"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                    <IgbColumn Field="ContactTitle"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                </IgbColumnGroup>
            </IgbColumnGroup>
            <IgbColumnGroup Header="Address Information" HeaderTemplateScript="HeaderTemplate">
                <IgbColumn Field="Location"
                           Hidden=true
                           Resizable="true"
                           Sortable="true">
                </IgbColumn>
                <IgbColumn Field="Phone"
                           Hidden=true
                           Resizable="true"
                           Sortable="true">
                </IgbColumn>
                <IgbColumnGroup Header="Location">
                    <IgbColumn Field="Country"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                    <IgbColumn Field="Region"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                    <IgbColumn Field="City"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                    <IgbColumn Field="Address"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                </IgbColumnGroup>
                <IgbColumnGroup Header="Contact Information">
                    <IgbColumn Field="Phone"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                    <IgbColumn Field="Fax"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                    <IgbColumn Field="PostalCode"
                               Resizable="true"
                               Sortable="true">
                    </IgbColumn>
                </IgbColumnGroup>
            </IgbColumnGroup>
        </IgbGrid>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {

    }
    private IgbIcon IconRef { get; set; }
    protected override void OnAfterRender(bool firstRender)
    {
        var grid = this.grid;
        if (this.IconRef != null && firstRender)
        {
            this.IconRef.EnsureReady().ContinueWith(new Action<Task>((e) =>
            {
                const string expandLess = "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><path d='m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z'></path></svg>";
                const string expandMore = "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><path d='M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z'></path></svg>";
                this.IconRef.RegisterIconFromText("expand_more", expandMore, "material");
                this.IconRef.RegisterIconFromText("expand_less", expandLess, "material");
            }));
        }
    }

    private IgbGrid grid;

    private CustomersData _customersData = null;

    public CustomersData CustomersData
    {
        get
        {
            if (_customersData == null)
            {
                _customersData = new CustomersData();
            }
            return _customersData;
        }
    }

}