@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor
@inject HttpClient Http

<div class="igContainer">
    <div class="igComponent">
        <GeographicMap @ref="MapRef" Height="100%" Width="100%" Zoomable="true">
            <GeographicHighDensityScatterSeries DataSource="@DataSource"
                LongitudeMemberPath="Lon"
                LatitudeMemberPath="Lat"
                HeatMaximumColor="Red"
                HeatMinimumColor="10"
                HeatMaximum="5"
                HeatMinimum="0"
                PointExtent="1"
                MouseOverEnabled="true" />
        </GeographicMap>
    </div>
</div>

@code {

    private List<AusPlaceCsv> DataSource;
    private Rect GeoBound;
    public GeographicMap MapRef;

    protected override async Task OnInitializedAsync()
    {
        GeographicMapModule.Register(IgniteUIBlazor);
        DataChartInteractivityModule.Register(IgniteUIBlazor);

        string url = "https://static.infragistics.com/xplatform/data/AusPlaces.csv";

        string csv = await Http.GetStringAsync(url);

        string[] csvLines = csv.Split(Environment.NewLine);

        List<AusPlaceCsv> dataItems = new List<AusPlaceCsv>();

        for (int i = 1; i < csvLines.Length - 1; i++)
        {
            string[] columns = csvLines[i].Split(",");
            AusPlaceCsv location = new AusPlaceCsv()
            {
                Lat = double.Parse(columns[2]),
                Lon = double.Parse(columns[1]),
                Name = columns[0],
            };

            dataItems.Add(location);
        }

        this.DataSource = dataItems;

        this.GeoBound = new Rect(100, -40, new Size(50, 25));

        await Task.Delay(1);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (MapRef != null)
            MapRef.ZoomToGeographic(this.GeoBound);

    }

    public class AusPlaceCsv
    {

        public string Name { get; set; }

        public double Lat { get; set; }

        public double Lon { get; set; }

        public double Pop { get; set; }

        public string Country { get; set; }
        public bool Cap { get; set; }
    }
}