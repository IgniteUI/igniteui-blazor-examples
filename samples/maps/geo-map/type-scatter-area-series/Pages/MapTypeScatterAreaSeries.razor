@using Infragistics.Blazor.Controls
@inject IInfragisticsBlazor InfragisticsBlazor

<div class="igContainer">
    <div class="igOptions">
        @* TODO add options (if any) for IG control here otherwise remove DIV with igOptions *@
    </div>

    <div class="igComponent">

        <ShapeDataSource @ref="ShapeData"
                         ShapefileSource="https://static.infragistics.com/xplatform/shapes/WorldTemperatures.shp"
                         DatabaseSource="https://static.infragistics.com/xplatform/shapes/WorldTemperatures.shp"
                         ImportCompleted="@OnShapeDataSourceImportCompleted">
        </ShapeDataSource>

        <GeographicMap Height="100%" Width="100%" Zoomable="true">

        </GeographicMap>
    </div>
</div>

@code {

    //TODO - THIS SAMPLE IN REACT PARSES THE SHAPEDATASOURCE, NOT SURE IF WE ARE GOING THAT ROUTE OR HOW TO DO THIS IN BLAZOR

    private ShapeDataSource ShapeData;

    protected override void OnInitialized()
    {
        GeographicMapModule.Register(InfragisticsBlazor);
    }

    private void OnShapeDataSourceImportCompleted(AsyncCompletedEventArgs args)
    {
        int count = this.ShapeData.GetRecordsCount();

        Console.WriteLine("Count: " + count);

        for (int i = 0; i < count; i++)
        {
            ShapefileRecord record = this.ShapeData.GetRecord(i);
            var obj = record.FieldValues;
            Console.WriteLine("FieldValues: " + obj);
        }
    }
}