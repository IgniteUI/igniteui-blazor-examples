@using IgniteUI.Blazor.Controls

@inject NavigationManager NavManager

<style>
igc-dialog::part(content) {
width: 900px;

}
</style>

 <IgbButton @onclick="OnDialogShow" Variant=@ButtonVariant.Contained>Click to enter your Azure key</IgbButton>

    <IgbDialog @ref="DialogRef" Title="Azure Maps" Closed="OnClosed">
        <form id="form" method="dialog">
            <IgbInput Label="Azure Key" @bind-value="AzureKey">
            </IgbInput>
        </form>       
    </IgbDialog>

<div class="container horizontal">
   
    <IgbGeographicMap @ref="AzureAerialMap"
                      Height="100%" Width="100%" Zoomable="true"
                      BackgroundContent="@AerialImagery">
    </IgbGeographicMap>
    <IgbGeographicMap @ref="AzureRoadMap"
                      Height="100%" Width="100%" Zoomable="true"
                      BackgroundContent="@RoadImagery">
    </IgbGeographicMap>
</div>

@code {

    private IgbAzureMapsMapImagery AerialImagery;
    private IgbAzureMapsMapImagery RoadImagery;
    private IgbGeographicMap AzureAerialMap;
    private IgbGeographicMap AzureRoadMap;
    public IgbDialog DialogRef;

    private string AzureKey;

    public void OnClosed(IgbVoidEventArgs e)
    {
        this.RoadImagery = CreateImagery(AzureMapsImageryStyle.Road);
        this.AerialImagery = CreateImagery(AzureMapsImageryStyle.Imagery);
    }

    public IgbAzureMapsMapImagery CreateImagery(AzureMapsImageryStyle style)
    {        
        var imagery = new IgbAzureMapsMapImagery();
        imagery.ApiKey = AzureKey;
        imagery.ImageryStyle = style;

        return imagery;
    }

    public async Task OnDialogShow()
    {
        if (this.DialogRef != null)
        {
            await this.DialogRef.ShowAsync();
        }
    }

}